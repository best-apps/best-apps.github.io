<?xml version="1.0"?>
<rss version="2.0">  <channel>
    <title>腾达格尔的博客</title>
    <link>http://best-apps-now.com</link>
    <pubDate>23 Sep 14 08:32 CST</pubDate>
    <item>
      <title>go语言在windows8访问oracle</title>
      <link>http://best-apps-now.com/experience/go-oci8_for_windows.html</link>
      <pubDate>2014-09-23 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;本文描述了go语言的oracle驱动在windows8 64位系统的安装过程。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;1.-go语言安装包使用的是32位的windows版本&#34; href=&#34;#1.-go语言安装包使用的是32位的windows版本&#34;&gt;&lt;/a&gt;1. go语言安装包使用的是32位的windows版本&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;go1.3.1.windows-386.msi&#xA;下载地址：www.golang.org&#xA;安装到目录：c:\go&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;2.-oracle驱动使用的是32位的windows版本&#34; href=&#34;#2.-oracle驱动使用的是32位的windows版本&#34;&gt;&lt;/a&gt;2. Oracle驱动使用的是32位的windows版本&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;instantclient-basic-nt-11.2.0.4.0.zip&#xA;instantclient-sdk-nt-11.2.0.4.0.zip&#xA;下载地址：www.oracle.com&#xA;安装到: c:\ora_11_client&#xA;sdk解压后复制到 c:\ora_11_client\sdk 目录下&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;3.mingw使用的是32位的windows版本&#34; href=&#34;#3.mingw使用的是32位的windows版本&#34;&gt;&lt;/a&gt;3.Mingw使用的是32位的windows版本&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;使用 mingw-get-setup.exe 在线安装&#xA;官网地址：http://www.mingw.org/&#xA;安装位置： C:\MinGW&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;4.-以上内容安装后，修改系统的环境变量&#34; href=&#34;#4.-以上内容安装后，修改系统的环境变量&#34;&gt;&lt;/a&gt;4. 以上内容安装后，修改系统的环境变量&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;GOROOT=C:\Go\&#xA;TNS_ADMIN=c:\ora_11_client&#xA;ORACLE_BASE=c:\ora_11_client&#xA;ORACLE_HOME=c:\ora_11_client&#xA;PATH=原path;c:\mingw\bin;%ORACLE_HOME%;%GOROOT%\bin;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;5.-在目录c:\mingw\lib目录下建立目录-pkg-config&#34; href=&#34;#5.-在目录c:\mingw\lib目录下建立目录-pkg-config&#34;&gt;&lt;/a&gt;5. 在目录C:\MinGW\lib目录下建立目录 pkg-config&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;6.-到-https://github.com/wendal/go-oci8-上直接下载压缩包-go-oci8-master.zip&#34; href=&#34;#6.-到-https://github.com/wendal/go-oci8-上直接下载压缩包-go-oci8-master.zip&#34;&gt;&lt;/a&gt;6. 到 &lt;a href=&#34;https://github.com/wendal/go-oci8&#34;&gt;https://github.com/wendal/go-oci8&lt;/a&gt; 上直接下载压缩包 go-oci8-master.zip&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;解压后，将里面的windows目录下的，oci8.pc 复制到 C:\MinGW\lib\pkg-config&#xA;将windows目录下的pkg-config.exe复制到 C:\MinGW\bin 目录中。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;7.-修改oci8.pc文件内容为自己的配置&#34; href=&#34;#7.-修改oci8.pc文件内容为自己的配置&#34;&gt;&lt;/a&gt;7. 修改oci8.pc文件内容为自己的配置&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;prefix=C:/ora_11_client&#xA;exec_prefix=C:/ora_11_client&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;8.-去www.zlib.net-下载zlib的zlib128-dll.zip-,-解压后-放到c:\mingw的目录中&#34; href=&#34;#8.-去www.zlib.net-下载zlib的zlib128-dll.zip-,-解压后-放到c:\mingw的目录中&#34;&gt;&lt;/a&gt;8. 去www.zlib.net 下载zlib的zlib128-dll.zip , 解压后 放到C:\MinGW的目录中&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;9.-执行-go-get-github.com/wendal/go-oci8&#34; href=&#34;#9.-执行-go-get-github.com/wendal/go-oci8&#34;&gt;&lt;/a&gt;9. 执行 go get github.com/wendal/go-oci8&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;如果出现报错，则需要修改如下内容。&#xA;修改oci8.go中OCIServer为OCISvcCtx，全部替换即可&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;10.-再次执行-go-get-github.com/wendal/go-oci8&#34; href=&#34;#10.-再次执行-go-get-github.com/wendal/go-oci8&#34;&gt;&lt;/a&gt;10. 再次执行 go get github.com/wendal/go-oci8&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;11-执行测试&#34; href=&#34;#11-执行测试&#34;&gt;&lt;/a&gt;11 执行测试&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;cd %GOPATH%/src/github.com/wendal/go-oci8/example&#xA;go run example&#xA;如果报错，则修改一下 :&#xA;_ &amp;quot;github.com/matten/go-oci8&amp;quot;&#xA;修改为&#xA;_ &amp;quot;github.com/wendal/go-oci8&amp;quot;&#xA;&#xA;db, err := sql.Open(&amp;quot;oci8&amp;quot;, &amp;quot;用户名/密码@tns_name&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;至此，在我的环境上编译成功。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>linux-c语言-消息队列-编程实现</title>
      <link>http://best-apps-now.com/code/linux/linux_c_msg.html</link>
      <pubDate>2014-09-19 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;发送消息&#34; href=&#34;#发送消息&#34;&gt;&lt;/a&gt;发送消息&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;程序代码-msgsend.c&#34; href=&#34;#程序代码-msgsend.c&#34;&gt;&lt;/a&gt;程序代码 msgsend.c&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &amp;lt;unistd.h&amp;gt;  &#xA;#include &amp;lt;stdlib.h&amp;gt;  &#xA;#include &amp;lt;stdio.h&amp;gt;  &#xA;#include &amp;lt;string.h&amp;gt;  &#xA;#include &amp;lt;sys/msg.h&amp;gt;  &#xA;#include &amp;lt;errno.h&amp;gt;  &#xA;&#xA;#define MAX_TEXT 512  &#xA;struct msg_st  &#xA;{  &#xA;    long int msg_type;  &#xA;    char text[MAX_TEXT];  &#xA;};  &#xA;&#xA;int main()  &#xA;{  &#xA;    int running = 1;  &#xA;    struct msg_st data;  &#xA;    char buffer[BUFSIZ];  &#xA;    int msgid = -1;  &#xA;&#xA;    //建立消息队列  &#xA;    msgid = msgget((key_t)1234, 0666 | IPC_CREAT);  &#xA;    if(msgid == -1)  &#xA;    {  &#xA;        fprintf(stderr, &amp;quot;msgget failed with error: %d\n&amp;quot;, errno);  &#xA;        exit(EXIT_FAILURE);  &#xA;    }  &#xA;&#xA;    //向消息队列中写消息，直到写入end  &#xA;    while(running)  &#xA;    {  &#xA;        //输入数据  &#xA;        printf(&amp;quot;Enter some text: &amp;quot;);  &#xA;        fgets(buffer, BUFSIZ, stdin);  &#xA;        data.msg_type = 1;    //注意2  &#xA;        strcpy(data.text, buffer);  &#xA;        //向队列发送数据  &#xA;        if(msgsnd(msgid, (void*)&amp;amp;data, MAX_TEXT, 0) == -1)  &#xA;        {  &#xA;            fprintf(stderr, &amp;quot;msgsnd failed\n&amp;quot;);  &#xA;            exit(EXIT_FAILURE);  &#xA;        }  &#xA;        //输入end结束输入  &#xA;        if(strncmp(buffer, &amp;quot;end&amp;quot;, 3) == 0)  &#xA;            running = 0;  &#xA;        sleep(1);  &#xA;    }  &#xA;    exit(EXIT_SUCCESS);  &#xA;}  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;编译&#34; href=&#34;#编译&#34;&gt;&lt;/a&gt;编译&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gcc -o msgsend msgsend.c -lm &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;执行&#34; href=&#34;#执行&#34;&gt;&lt;/a&gt;执行&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;./msgsend &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;接收消息&#34; href=&#34;#接收消息&#34;&gt;&lt;/a&gt;接收消息&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;程序代码-msgrecv.c&#34; href=&#34;#程序代码-msgrecv.c&#34;&gt;&lt;/a&gt;程序代码 msgrecv.c&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &amp;lt;unistd.h&amp;gt;&#xA;#include &amp;lt;stdlib.h&amp;gt;&#xA;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &amp;lt;string.h&amp;gt;&#xA;#include &amp;lt;errno.h&amp;gt;&#xA;#include &amp;lt;sys/msg.h&amp;gt;&#xA;&#xA;struct msg_st&#xA;{&#xA;    long int msg_type;&#xA;    char text[BUFSIZ];&#xA;};&#xA;&#xA;int main()&#xA;{&#xA;int running = 1;&#xA;int msgid = -1;&#xA;struct msg_st data;&#xA;long int msgtype = 0; //注意1&#xA;&#xA;//建立消息队列&#xA;msgid = msgget((key_t)1234, 0666 | IPC_CREAT);&#xA;if(msgid == -1)&#xA;{&#xA;    fprintf(stderr, &amp;quot;msgget failed with error: %d\n&amp;quot;, errno);&#xA;    exit(EXIT_FAILURE);&#xA;}&#xA;//从队列中获取消息，直到遇到end消息为止&#xA;while(running)&#xA;{&#xA;    if(msgrcv(msgid, (void*)&amp;amp;data, BUFSIZ, msgtype, 0) == -1)&#xA;    {&#xA;        fprintf(stderr, &amp;quot;msgrcv failed with errno: %d\n&amp;quot;, errno);&#xA;        exit(EXIT_FAILURE);&#xA;    }&#xA;    printf(&amp;quot;You wrote: %s\n&amp;quot;,data.text);&#xA;    //遇到end结束&#xA;    if(strncmp(data.text, &amp;quot;end&amp;quot;, 3) == 0)&#xA;        running = 0;&#xA;}&#xA;//删除消息队列&#xA;if(msgctl(msgid, IPC_RMID, 0) == -1)&#xA;{&#xA;    fprintf(stderr, &amp;quot;msgctl(IPC_RMID) failed\n&amp;quot;);&#xA;    exit(EXIT_FAILURE);&#xA;}&#xA;exit(EXIT_SUCCESS);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;编译&#34; href=&#34;#编译&#34;&gt;&lt;/a&gt;编译&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gcc -o msgrecv msgrecv.c -lm &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;运行&#34; href=&#34;#运行&#34;&gt;&lt;/a&gt;运行&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;./msgrecv&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>linux-c语言-base64加密解密编程实现</title>
      <link>http://best-apps-now.com/code/linux/linux_c_base64.html</link>
      <pubDate>2014-09-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;base64 加密、解密&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;源代码&#34; href=&#34;#源代码&#34;&gt;&lt;/a&gt;源代码&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;头文件 base64.h&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#ifndef __BASE64_H__&#xA;#define __BASE64_H__&#xA;&#xA;/*加密*/&#xA;char* base64_encode(const char* data, int data_len);&#xA;/*解密*/ &#xA;char *base64_decode(const char* data, int data_len);&#xA;&#xA;&#xA;#endif /* __BASE64_H__ */&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;源文件 base64.c&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &amp;lt;string.h&amp;gt;&#xA;#include &amp;quot;base64.h&amp;quot;&#xA;const char base[] = &amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&amp;quot;; &#xA;static char find_pos(char ch);  &#xA;char *base64_encode(const char* data, int data_len) &#xA;{ &#xA;&#xA;    int prepare = 0; &#xA;    int ret_len; &#xA;    int temp = 0; &#xA;    char *ret = NULL; &#xA;    char *f = NULL; &#xA;    int tmp = 0; &#xA;    char changed[4]; &#xA;    int i = 0; &#xA;    ret_len = data_len / 3; &#xA;    temp = data_len % 3; &#xA;    if (temp &amp;gt; 0) &#xA;    { &#xA;        ret_len += 1; &#xA;    } &#xA;    ret_len = ret_len*4 + 1; &#xA;    ret = (char *)malloc(ret_len); &#xA;&#xA;    if ( ret == NULL) &#xA;    { &#xA;        printf(&amp;quot;No enough memory.\n&amp;quot;); &#xA;        return NULL; &#xA;    } &#xA;    memset(ret, 0, ret_len); &#xA;    f = ret; &#xA;    while (tmp &amp;lt; data_len) &#xA;    { &#xA;        temp = 0; &#xA;        prepare = 0; &#xA;        memset(changed, &#39;\0&#39;, 4); &#xA;        while (temp &amp;lt; 3) &#xA;        { &#xA;            //printf(&amp;quot;tmp = %d\n&amp;quot;, tmp); &#xA;            if (tmp &amp;gt;= data_len) &#xA;            { &#xA;                break; &#xA;            } &#xA;            prepare = ((prepare &amp;lt;&amp;lt; 8) | (data[tmp] &amp;amp; 0xFF)); &#xA;            tmp++; &#xA;            temp++; &#xA;        } &#xA;        prepare = (prepare&amp;lt;&amp;lt;((3-temp)*8)); &#xA;&#xA;        for (i = 0; i &amp;lt; 4 ;i++ ) &#xA;        { &#xA;            if (temp &amp;lt; i) &#xA;            { &#xA;                changed[i] = 0x40; &#xA;            } &#xA;            else &#xA;            { &#xA;                changed[i] = (prepare&amp;gt;&amp;gt;((3-i)*6)) &amp;amp; 0x3F; &#xA;            } &#xA;            *f = base[changed[i]]; &#xA;&#xA;            f++; &#xA;        } &#xA;    } &#xA;    *f = &#39;\0&#39;; &#xA;&#xA;    return ret; &#xA;&#xA;} &#xA;/* */ &#xA;static char find_pos(char ch)   &#xA;{ &#xA;    char *ptr = (char*)strrchr(base, ch);&#xA;    return (ptr - base); &#xA;} &#xA;/* */ &#xA;char *base64_decode(const char *data, int data_len) &#xA;{ &#xA;    int ret_len = (data_len / 4) * 3; &#xA;    int equal_count = 0; &#xA;    char *ret = NULL; &#xA;    char *f = NULL; &#xA;    int tmp = 0; &#xA;    int temp = 0; &#xA;    char need[3]; &#xA;    int prepare = 0; &#xA;    int i = 0; &#xA;    if (*(data + data_len - 1) == &#39;=&#39;) &#xA;    { &#xA;        equal_count += 1; &#xA;    } &#xA;    if (*(data + data_len - 2) == &#39;=&#39;) &#xA;    { &#xA;        equal_count += 1; &#xA;    } &#xA;    if (*(data + data_len - 3) == &#39;=&#39;) &#xA;    {//seems impossible &#xA;        equal_count += 1; &#xA;    } &#xA;    switch (equal_count) &#xA;    { &#xA;    case 0: &#xA;        ret_len += 4;//3 + 1 [1 for NULL] &#xA;        break; &#xA;    case 1: &#xA;        ret_len += 4;//Ceil((6*3)/8)+1 &#xA;        break; &#xA;    case 2: &#xA;        ret_len += 3;//Ceil((6*2)/8)+1 &#xA;        break; &#xA;    case 3: &#xA;        ret_len += 2;//Ceil((6*1)/8)+1 &#xA;        break; &#xA;    } &#xA;    ret = (char *)malloc(ret_len); &#xA;    if (ret == NULL) &#xA;    { &#xA;        printf(&amp;quot;No enough memory.\n&amp;quot;); &#xA;        return NULL; &#xA;    } &#xA;    memset(ret, 0, ret_len); &#xA;    f = ret; &#xA;    while (tmp &amp;lt; (data_len - equal_count)) &#xA;    { &#xA;        temp = 0; &#xA;        prepare = 0; &#xA;        memset(need, 0, 4); &#xA;        while (temp &amp;lt; 4) &#xA;        { &#xA;            if (tmp &amp;gt;= (data_len - equal_count)) &#xA;            { &#xA;                break; &#xA;            } &#xA;            prepare = (prepare &amp;lt;&amp;lt; 6) | (find_pos(data[tmp])); &#xA;            temp++; &#xA;            tmp++; &#xA;        } &#xA;        prepare = prepare &amp;lt;&amp;lt; ((4-temp) * 6); &#xA;        for (i=0; i&amp;lt;3 ;i++ ) &#xA;        { &#xA;            if (i == temp) &#xA;            { &#xA;                break; &#xA;            } &#xA;            *f = (char)((prepare&amp;gt;&amp;gt;((2-i)*8)) &amp;amp; 0xFF); &#xA;            f++; &#xA;        } &#xA;    } &#xA;    *f = &#39;\0&#39;; &#xA;    return ret; &#xA;}&#xA;&#xA;/******************************************************************/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;调用例子 main.c&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &amp;lt;stdlib.h&amp;gt;&#xA;#include &amp;lt;string.h&amp;gt;&#xA;#include &amp;lt;fcntl.h&amp;gt;&#xA;#include &amp;quot;base64.h&amp;quot;&#xA;int main (int argc,char **argv)&#xA;{&#xA;int fd = 0;&#xA;char buf[1024];&#xA;char src[1024];&#xA;char *base64_buf;&#xA;&#xA;&#xA;/*测试 字符串加密 */&#xA;char *t = &amp;quot;what are you doing 132ey3wy99989==*&amp;amp;%$#@!&amp;quot;; &#xA;int i = 0; &#xA;int j = strlen(t); &#xA;char *enc = base64_encode(t, j); &#xA;int len = strlen(enc); &#xA;char *dec = base64_decode(enc, len); &#xA;printf(&amp;quot;\noriginal: %s\n&amp;quot;, t); &#xA;printf(&amp;quot;\nencoded : %s\n&amp;quot;, enc); &#xA;printf(&amp;quot;\ndecoded : %s\n&amp;quot;, dec); &#xA;free(enc); &#xA;free(dec); &#xA;return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>css学习</title>
      <link>http://best-apps-now.com/code/go/study_css_01.html</link>
      <pubDate>2014-09-09 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;#声明&lt;/p&gt;&#xA;&#xA;&lt;p&gt;本学习笔记摘自 &lt;a href=&#34;http://www.aa25.cn/div_css/903.shtml&#34;&gt;http://www.aa25.cn/div_css/903.shtml&lt;/a&gt;&#xA;特此声明。&lt;/p&gt;&#xA;&#xA;&lt;div id=&#34;layout&#34;&gt;此处显示  id &#34;layout&#34; 的内容&lt;/div&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;一列固定宽度&#34; href=&#34;#一列固定宽度&#34;&gt;&lt;/a&gt;一列固定宽度&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;&amp;lt;!--&#xA;#layout {&#xA;    background-color: #00FFFF;&#xA;    height: 200px;&#xA;    width: 400px;&#xA;}&#xA;--&amp;gt;&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;截图如下：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/css_div/01-01.jpg&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;一列固定宽度居中&#34; href=&#34;#一列固定宽度居中&#34;&gt;&lt;/a&gt;一列固定宽度居中&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;&amp;lt;!--&#xA;#layout {&#xA;    background-color: #00CCFF;&#xA;    margin: auto;&#xA;    height: 200px;&#xA;    width: 400px;&#xA;}&#xA;--&amp;gt;&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;margin 设为auto时，布局居中。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;截图如下：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/css_div/01-02.jpg&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;##一列自适应宽度&lt;/p&gt;&#xA;&#xA;&lt;p&gt;自适应宽度是相对于浏览器而言，盒模型的宽度随着浏览器宽度的改变而改变。这时要用到宽度的百分比。当一个盒模型不设置宽度时，它默认是相对于浏览器显示的。我们把刚才的固定宽度例子中的宽度去掉看看：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;&amp;lt;!--&#xA;#layout {&#xA;    background-color: #00CCFF;&#xA;    margin: auto;&#xA;    height: 200px;&#xA;    }&#xA;--&amp;gt;&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;截图如下：&#xA;&lt;img src=&#34;/assets/media/images/css_div/01-03.jpg&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有些朋友可能要问了，那为什么还有那么宽的白边呢？这个是由body默认的外边距造成的。当我们不用任何样式表进行定义时，body，h1－h6，ul等元素默认有外边距或其它样式的。这里我们在css样式中增加一项：body {margin:0;}，就可以把body默认的外边距去掉，这时再预览一下，白边就没了。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;    &amp;lt;!--&#xA;    body {margin:0;}&#xA;&#xA;    #layout {&#xA;        background-color: #00CCFF;&#xA;        margin: auto;&#xA;        height: 200px;&#xA;    }&#xA;    --&amp;gt;&#xA;   &amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;浏览器宽度的80%显示&#34; href=&#34;#浏览器宽度的80%显示&#34;&gt;&lt;/a&gt;浏览器宽度的80%显示&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;&amp;lt;!--&#xA;body {margin:0;}&#xA;&#xA;#layout {&#xA;    background-color: #00CCFF;&#xA;    height: 200px;&#xA;    width: 80%;&#xA;}&#xA;--&amp;gt;&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;截图如下：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/css_div/01-04.jpg&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;浏览器宽度的80%居中显示&#34; href=&#34;#浏览器宽度的80%居中显示&#34;&gt;&lt;/a&gt;浏览器宽度的80%居中显示&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;&amp;lt;!--&#xA;body {margin:0;}&#xA;&#xA;#layout {&#xA;    background-color: #00CCFF;&#xA;    height: 200px;&#xA;    width: 80%;&#xA;    margin: auto;&#xA;}&#xA;--&amp;gt;&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;添加了： margin: auto;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;截图如下：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/css_div/01-05.jpg&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;一列二至多块布局&#34; href=&#34;#一列二至多块布局&#34;&gt;&lt;/a&gt;一列二至多块布局&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;一般的网站整体可以分为上中下结构，即：头部、中间主体、底部。那么我们可以用三个div块来划分，分别给它们起名为：头部（header）、主体（maincontent）、底部（footer）。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;采用固定宽度居中的方式，代码如下：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;    &amp;lt;!--&#xA;    body { margin:0; padding:0;}&#xA;    #header { margin:5px auto; width:500px; height:80px; background:#9F9;}&#xA;    #main { margin:5px auto; width:500px; height:200px; background:#9FF;}&#xA;    #footer { margin:5px auto; width:500px; height:80px; background:#9f9;}&#xA;    --&amp;gt;&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;截图如下：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/css_div/01-06.jpg&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>GO语言学习笔记-之一</title>
      <link>http://best-apps-now.com/code/go/study_go_01.html</link>
      <pubDate>2014-09-04 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;&lt;a style=&#34;display: block;&#34; name=&#34;变量&#34; href=&#34;#变量&#34;&gt;&lt;/a&gt;变量&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;定义变量&#34; href=&#34;#定义变量&#34;&gt;&lt;/a&gt;定义变量&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var&#xA;(&#xA;    i int &#xA;    j int = 0&#xA;    s string &#xA;    m string = &amp;quot;test&amp;quot;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;或者&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var i int&#xA;var j int = 0&#xA;s string &#xA;m string = &amp;quot;test&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;或者&#xA;    j := 0&#xA;    m := &amp;ldquo;test&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;定义常量&#34; href=&#34;#定义常量&#34;&gt;&lt;/a&gt;定义常量&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;const DB_COUNT = 10&#xA;const DB_STR = &amp;quot;SQLITE3&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;定义结构体&#34; href=&#34;#定义结构体&#34;&gt;&lt;/a&gt;定义结构体&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;//定义专业信息结构体&#xA;type SpecialtyInfoItem struct {&#xA;    id      int    //学校编码&#xA;    school  string //学校名称&#xA;    title   string //专业名称&#xA;    content string //专业内容&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;变量类型转换&#34; href=&#34;#变量类型转换&#34;&gt;&lt;/a&gt;变量类型转换&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1、整形到字符串：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var i int = 1  &#xA;var s string  &#xA;s = strconv.Itoa(i) &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;或者&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;s = FormatInt(int64(i), 10)  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;2、字符串到整形&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var s string = &amp;quot;1&amp;quot;  &#xA;var i int  &#xA;i, err = strconv.Atoi(s) &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;或者&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;i, err = ParseInt(s, 10, 0)  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;3、字符串到float(32 / 64)&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var s string = 1  &#xA;var f float32  &#xA;f, err = ParseFloat(s, 32)  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;float 64的时候将上面函数中的32转为64即可&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4、整形到float或者float到整形&#xA;    直接使用float(i)&#xA;或者&#xA;    int(f) 直接进行转换即可&lt;/p&gt;&#xA;&#xA;&lt;p&gt;数据类型&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var varName type，var var1,var2… type，var varName type = Value，var varName1,varName2 type = Value1,Value2，var varName1,varName2=Value1,Value2，varName1,varName2:=Value1,Value2，定义数据类型。&#xA;&#xA;声明了没有被使用的变量将在编译时报错。&#xA;&#xA;常量定义： const varName = Value , const varName type = Value&#xA;&#xA;string字符串类型值不可改变，但是可以切片，字符串可以使用+进行连接&#xA;&#xA;iota用来声明enum，表示自加1，初始为0&#xA;&#xA;var arrayName [N]type用来声明数组，或者使用 arrayName := [N]type{ v1,v2…}来声明&#xA;&#xA;数组声明可以嵌套&#xA;&#xA;slice用来表示切片，声明方式var sliceName []type或者sliceName := []type{v1,v2…}&#xA;&#xA;slice保存的是引用而非实体&#xA;&#xA;在slice中有一些内置函数，len获取长度，cap获取最大容量，append追加数据，copy用来拷贝数据&#xA;&#xA;map声明方式为var mapName map[keyType] valueType或者mapName := make(map[keyType]valueType)&#xA;&#xA;map可通过 key : value 初始化&#xA;&#xA;make用于内建类型的内存分配，new用于各种类型的内存分配，new返回指针而make返回非0的值&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;流程控制&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;if语句不需要括号，在if语句中可以声明变量，用分好分割if语句的条件判断&#xA;&#xA;  if x:=function();x&amp;lt;10 {&#xA;      fmt.Printf(&amp;quot;x &amp;lt; 10,%d\n&amp;quot;,x);&#xA;  }else{&#xA;      fmt.Print(&amp;quot;x &amp;gt;= 10 ,%d\n&amp;quot;,x);&#xA;  }&#xA;&#xA;goto语句类似C语言，但是跳转到必须在当前函数内定义的标签&#xA;&#xA;for语句类似C语言，但是break和continue可以跟标号，跳出多重循环。&#xA;&#xA;switch语句不用break，如果想强行执行下面的case可以使用fallthrough&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;函数&lt;/p&gt;&#xA;&#xA;&lt;p&gt;声明方式：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;func funcName(input1 type1, input2 type2) (output1 type1, output2 type2)&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;func用来声明函数，函数名为funcName，后面跟输入，输出的数据类型。&#xA;&#xA;函数可以有多个返回值&#xA;&#xA;函数的值操作和指针操作类似C语言，内置类型中的string,slice,map直接使用的是类似的指针传递，不用使用取地址符，但是，如果需要改变slice的长度，则需要取地址穿指针。&#xA;&#xA;defer语句用来表示在函数返回前执行的语句。&#xA;&#xA;type typeName func(input1 inputType1 , input2 inputType2 [, ...]) (result1 resultType1 [, ...])用来声明一个函数类型，主要用于高阶函数中。&#xA;&#xA;import用来导入包，package用来导出包，包操作使用.操作符&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Struct类型&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;声明方式：&#xA;&#xA;  type Person struct {&#xA;  name string&#xA;  age int&#xA;  }&#xA;&#xA;匿名方式，匿名方式下A含有B的所有类型&#xA;&#xA;  type Student struct {&#xA;  Person  // 默认Person的所有字段&#xA;  speciality string&#xA;  }&#xA;&#xA;如果匿名类型中有字段和本身有冲突，可以使用匿名类型+.访问&#xA;&#xA;类型的方法声明：&#xA;&#xA;  func (r ReceiverType) funcName(parameters) (results)&#xA;&#xA;可以使用：type typeName typeLiteral来自定义类型，定义完以后可以使用方法来扩展类型的功能。&#xA;&#xA;需要改变struct内部的值时，需要将ReceiverType定义为*指针类型，但是调用的时候不需要，go语言自动帮你完成了。&#xA;&#xA;方法可以继承，可以重载&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;interface接口&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;type InterfaceName interface用来定义inerface&#xA;&#xA;interface类型定义了一组方法，如果某个对象实现了某个接口的所有方法，则此对象就实现了此接口。&#xA;&#xA;空interface(interface{})不包含任何的method，正因为如此，所有的类型都实现了空interface&#xA;&#xA;一个函数把interface{}作为参数，那么他可以接受任意类型的值作为参数，如果一个函数返回interface{},那么也就可以返回任意类型的值&#xA;&#xA;value, ok = element.(T)，这里value就是变量的值，ok是一个bool类型，element是interface变量，T是断言的类型，如果ok为true则表示，element确实是T类型的。&#xA;&#xA;interface可以嵌套&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;并发&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;使用go关键字+函数名实现并发&#xA;&#xA;使用channel实现线程间通讯，channel通过make构造，使用&amp;lt;-来发送和接受数据。&#xA;&#xA;chan是channel的关键字，后面跟数据类型ch &amp;lt;- v发送数据，v:=&amp;lt;-ch接收数据，ch是chan类型。&#xA;&#xA;  package main&#xA;  import &amp;quot;fmt&amp;quot;&#xA;  func sum(a []int, c chan int) {&#xA;      total := 0&#xA;      for _, v := range a {&#xA;          total += v&#xA;      }&#xA;      c &amp;lt;- total  // send total to c&#xA;  }&#xA;&#xA;  func main() {&#xA;      a := []int{7, 2, 8, -9, 4, 0}&#xA;      c := make(chan int)&#xA;      go sum(a[:len(a)/2], c)&#xA;      go sum(a[len(a)/2:], c)&#xA;      x, y := &amp;lt;-c, &amp;lt;-c  // receive from c&#xA;      fmt.Println(x, y, x + y)&#xA;  }&#xA;&#xA;channel默认是阻塞形式的，可以进行线程同步。&#xA;&#xA;ch := make(chan type, value)构造channel时可通过设置不同的value来设定channl的buffer长度。&#xA;&#xA;close用来关闭channel&#xA;&#xA;使用select+case来选择多个channel&#xA;&#xA;使用select + case &amp;lt;- time.After(5 * time.Second)来设定超时&#xA;&#xA;Goexit 退出当前执行的goroutine，但是defer函数还会继续调用&#xA;&#xA;Gosched 让出当前goroutine的执行权限，调度器安排其他等待的任务运行，并在下次某个时候从该位置恢复执行。&#xA;&#xA;NumCPU 返回 CPU 核数量&#xA;&#xA;NumGoroutine 返回正在执⾏行和排队的任务总数&#xA;&#xA;GOMAXPROCS 用来设置可以运行的CPU核数&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;解析命令行&#34; href=&#34;#解析命令行&#34;&gt;&lt;/a&gt;解析命令行&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;package main&#xA;import (&#xA;&amp;quot;fmt&amp;quot;&#xA;&amp;quot;flag&amp;quot; //命令行选项解析器&#xA;)&#xA;&#xA;var input_action = flag.String(&amp;quot;action&amp;quot;, &amp;quot;startweb&amp;quot;, &amp;quot;请输入动作startweb 启动webserver ,initdb 初始化数据库 &amp;quot;)&#xA;&#xA;func main() {&#xA;    //解析命令行&#xA;    flag.Parse()&#xA;    fmt.Println(&amp;quot;action=&amp;quot;, *input_action)&#xA;    switch *input_action {&#xA;    case &amp;quot;startweb&amp;quot;:&#xA;        //startWebServer() //启动webserver&#xA;    case &amp;quot;initdb&amp;quot;:&#xA;        //myweb_lib.InitKmDB() //重新生成知识库数据库，只在第一次使用&#xA;    default:&#xA;        flag.Usage()&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>送给程序员：关于性格内向者的10个误解</title>
      <link>http://best-apps-now.com/zatan/about_neixiang.html</link>
      <pubDate>2014-09-02 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;我非常幸运的发现了这本《内向者优势——如何在外向的世界中获得成功》（英文名：The Introvert Advantage (How To Thrive in an Extrovert World)）的好书，我感觉就好像是有人专门为我们这个罕见的小群体写了一部百科全书一样，它不仅对我的很多怪癖做了解释，还帮助我从一个崭新且积极的角度重新定义了我的整个人生。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　毫无疑问，几乎所有认识我的人都会说，“啊哈，你不会到现在才发现你是个性格内向者吧？”，其实这并不是那么简单，问题在于将一些人贴上内向者的标签是一种非常浅显且充满各种常见误解的行为，事实要比这复杂的多（在Carl King讲过之后，就更是如此了）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　Laney的书中有个章节对人的大脑进行了分析，并解释了神经元是如何在内向者和外向者的神经系统中跟随不同的控制通路进行传递。如果这本书基于的科学理论是正确的，那就证明了内向者是一群对多巴胺过度敏感的群体，太多的外部刺激过量的消耗了它们。相反的，外向者没有足够的多巴胺，他们需要依靠大脑的肾上腺去创造它们，外向者通常有更短的神经通路，他们的大脑血流量也相对更少，外向者神经系统中的信息大部分都是通过位于前额叶的布罗卡氏区（Broca’s area）传递的，而这里正是我们的大部分思考发生的地方。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　不幸的是，根据这本书，只有大约25%的人是内向的，而像我这样极端的就更是少上加少了，这导致了许多的误解，因为社会对我们这类人缺乏足够的了解（我很高兴我能够这样说）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　所以下面我列出了一些对内向者的常见的误解（这是我自己的清单，我对其中一些深信不疑）：&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解1：-内向者不喜欢说话&#34; href=&#34;#误解1：-内向者不喜欢说话&#34;&gt;&lt;/a&gt;误解1： 内向者不喜欢说话&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　并不是这样，内向者不说话只是因为他们觉得没什么好说，他们讨厌闲谈扯淡，如果你让一个内向者讲他感兴趣的事情，他可能连着3天3夜都讲不完。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解2：-内向者都很害羞&#34; href=&#34;#误解2：-内向者都很害羞&#34;&gt;&lt;/a&gt;误解2： 内向者都很害羞&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　内向者没什么好害羞的，他们也不是害怕陌生人，他们只是需要一个理由去交际，他们不会为了交际而交际，如果你想和一个内向者交流，那就直接聊吧，不用担心礼貌问题。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解3：内向者都很无礼&#34; href=&#34;#误解3：内向者都很无礼&#34;&gt;&lt;/a&gt;误解3：内向者都很无礼&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　内向者通常觉得遵从社交礼仪，拐弯抹角的说话没有一点必要，他们希望每个人都是真实且真诚的，但不幸的是，大多数情况下事情并不是这样，这让内向者感到很大的压力，他们很难融入其中，并为此感到沮丧。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解4：-内向者不合群&#34; href=&#34;#误解4：-内向者不合群&#34;&gt;&lt;/a&gt;误解4： 内向者不合群&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　恰好相反，内向者会非常认真的对待他们为数不多的朋友，他们最亲密的朋友或许用一只手就可以统计过来，但如果你有幸被一个性格内向者当做朋友，那你就有了一个终生的盟友，一旦你作为一个人类存在赢得了他们的尊敬，你就入选了。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解5：内向者不喜欢去公共场合&#34; href=&#34;#误解5：内向者不喜欢去公共场合&#34;&gt;&lt;/a&gt;误解5：内向者不喜欢去公共场合&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　胡扯，内向者只是尽可能的避免去公共场所，他们同样也会尽量避免卷入复杂的公共活动，因为他们可以在极短的时间内获取需要的数据和经验，所以，他们喜欢在一个地方待很久去“得到某样东西”，他们总是准备着回家，调整（Recharging），然后处理一切，实际上，调整绝对是内向者的关键所在。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解6：内向者总是想要独处&#34; href=&#34;#误解6：内向者总是想要独处&#34;&gt;&lt;/a&gt;误解6：内向者总是想要独处&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　内向者只是喜欢自我思考，他们会想很多，他们会白日做梦，他们喜欢解决问题，攻克难题，但是如果他们找不到什么人来分享他们的发现，他们也能忍受难以想象的孤独。他们希望在同一时间只和一个人保持亲密的感情关系。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解7：内向者都很古怪&#34; href=&#34;#误解7：内向者都很古怪&#34;&gt;&lt;/a&gt;误解7：内向者都很古怪&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　内向者通常都是个人主义者，他们不喜欢随大流，他们喜欢通过特立独行的生活方式来体现自己的价值，他们总是从自我出发，正因如此，他们也常常挑战常规，他们的大部分决定都不会以当前的流行趋势做为参考。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解8：内向者都是冷漠的书呆子&#34; href=&#34;#误解8：内向者都是冷漠的书呆子&#34;&gt;&lt;/a&gt;误解8：内向者都是冷漠的书呆子&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　内向者通常更关注内心世界，他们将更多的精力放到自身的想法和感情上，但这并不代表他们对他们身边的事情漠不关心，只是他们更喜欢通过内心世界来达成自我满足。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解9：内向者不知道如何放松和享乐&#34; href=&#34;#误解9：内向者不知道如何放松和享乐&#34;&gt;&lt;/a&gt;误解9：内向者不知道如何放松和享乐&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　内向者通常喜欢在家或自然中放松自己，他们不会去那些嘈杂的公共场所，内向者也不会寻求肾上腺素的刺激，如果有太多的空谈和噪音，他们会敬而远之。他们的大脑对于一种叫做多巴胺的神经递质太过敏感，内向者和外向者拥有完全不同的神经控制通路，关于这一点，你可以深入了解下。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;误解10：内向者可以通过“自我修复”变得外向&#34; href=&#34;#误解10：内向者可以通过“自我修复”变得外向&#34;&gt;&lt;/a&gt;误解10：内向者可以通过“自我修复”变得外向&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;　　想象一个没有内向者的世界，那个世界也就没有什么科学家、音乐家、艺术家、诗人、制片人、医生、数学家、作家和哲学家了，之所以这么说，是因为外向者还是可以通过学习掌握很多种和内向者进行交流的方式（没错，我故意颠倒了这两个词，读着很别扭？我只是为了让你们看看我们这个社会有多变态），内向者压根不需要“自我修复”，他们应该因为他们这种天生的性格和为人类做出的贡献而得到应有的尊敬，并且事实上，一项调查（Silverman，1986）显示内向的程度和IQ成正比。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　“你没法避开我们，尝试改变我们只会让你感到失败”，这是我编的，我是一名剧作家。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　内向者如果为了去适应外向者支配的世界而对自己进行否定，结果将会是灾难性的，内向者终将会仇恨自己以及其他所有人。如果你认为你是个内向者，我推荐你研究下这个题目并试着找其他的性格内向者交换下意见，问题并不完全是内向者应该尝试并“变得正常”，外向者也需要认识和尊敬我们，并且我们也需要学会尊敬我们自己。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;英文来源：&lt;a href=&#34;http://www.carlkingdom.com/10-myths-about-introverts#.VAVsW2NZyY0&#34; title=&#34;英文来源&#34;&gt;http://www.carlkingdom.com/10-myths-about-introverts#.VAVsW2NZyY0&lt;/a&gt;&lt;br /&gt;&#xA;中文来源：&lt;a href=&#34;http://kb.cnblogs.com/page/181221/&#34; title=&#34;中文来源&#34;&gt;http://kb.cnblogs.com/page/181221/&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>使用GO语言编写网络爬虫</title>
      <link>http://best-apps-now.com/code/go/network_crawler.html</link>
      <pubDate>2014-09-01 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;本文的程序是使用go语言编写的网络爬虫程序，目标是从某大型教育网站上批量抓取国内所有大学的信息，3000多个大学的信息可并行抓取，可控制并行度及间隔时间。&#xA;&lt;strong&gt;由于我们主要是研究编程方法，因此为了避免对此教育网站造成压力，代码中将域名更改为test.com&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;主要过程如下&#34; href=&#34;#主要过程如下&#34;&gt;&lt;/a&gt;主要过程如下&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;执行主函数main&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;按照学校的编号循环抓取每个学校的网页内容&lt;/h4&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;获得学校名称，例如：北京大学&lt;/li&gt;&#xA;&lt;li&gt;获得学校所在地，例如：北京&lt;/li&gt;&#xA;&lt;li&gt;获得院校类型，例如：综合类&lt;/li&gt;&#xA;&lt;li&gt;获得学历层次，例如：普通本科、211、985等&lt;/li&gt;&#xA;&lt;li&gt;获得招生电话&lt;/li&gt;&#xA;&lt;li&gt;获得通讯地址&lt;/li&gt;&#xA;&lt;li&gt;获得官网地址&lt;/li&gt;&#xA;&lt;li&gt;获得学校简介&lt;/li&gt;&#xA;&lt;li&gt;获得专业列表&lt;/li&gt;&#xA;&lt;li&gt;获得专业介绍&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;本代码使用了go语言的主要功能&#34; href=&#34;#本代码使用了go语言的主要功能&#34;&gt;&lt;/a&gt;本代码使用了GO语言的主要功能&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;os,建立data目录等&lt;/li&gt;&#xA;&lt;li&gt;time，实现延时&lt;/li&gt;&#xA;&lt;li&gt;io，实现文件的写入&lt;/li&gt;&#xA;&lt;li&gt;fmt,实现格式输出&lt;/li&gt;&#xA;&lt;li&gt;net/http,实现网页内容的下载&lt;/li&gt;&#xA;&lt;li&gt;regexp,实现正则表达式对网页内容的抓取&lt;/li&gt;&#xA;&lt;li&gt;使用了go语句，进行函数并发执行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;代码分享&#34; href=&#34;#代码分享&#34;&gt;&lt;/a&gt;代码分享&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;代码中有详细的注释，代码如下：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;/*&#xA;名称：网络爬虫程序&#xA;用途：从某大型教育网站抓取大学的信息&#xA;作者:腾达格尔&#xA;版本：Ver 1.00 Go语言版本：1.3&#xA;时间：2014-09-01&#xA;*/&#xA;package main&#xA;&#xA;import (&#xA;    &amp;quot;fmt&amp;quot;&#xA;    &amp;quot;io/ioutil&amp;quot;&#xA;    &amp;quot;net/http&amp;quot;&#xA;    &amp;quot;os&amp;quot;&#xA;    &amp;quot;regexp&amp;quot;&#xA;    &amp;quot;time&amp;quot;&#xA;)&#xA;&#xA;var (&#xA;    tag_BrTag = regexp.MustCompile(`&amp;lt;br&amp;gt;|(&amp;lt;/br&amp;gt;)|(&amp;lt;br/&amp;gt;)`)&#xA;    tag_PTag  = regexp.MustCompile(`&amp;lt;p&amp;gt;|(&amp;lt;/p&amp;gt;)|(&amp;amp;rdquo)|(&amp;amp;ldquo)|(&amp;amp;mdash)|(&amp;lt;/strong&amp;gt;)`)&#xA;&#xA;    tag_Nbsp = regexp.MustCompile(`&amp;amp;nbsp;`)&#xA;&#xA;    tag_HTMLTag     = regexp.MustCompile(`(?s)&amp;lt;/?.*?&amp;gt;`)&#xA;    tag_Space       = regexp.MustCompile(`(^\s+)|( )|(\r\n)|(\t)`)&#xA;    tag_SchoolName  = regexp.MustCompile(`\svar\sschoolname=&#39;(.+)&#39;;\s`)&#xA;    tag_SchoolJjUrl = regexp.MustCompile(`&amp;lt;a href=&amp;quot;(.+)&amp;quot;&amp;gt;学校简介&amp;lt;/a&amp;gt;`)&#xA;    tag_SchoolJj    = regexp.MustCompile(`&amp;lt;divclass=&amp;quot;txt_leftline_24&amp;quot;&amp;gt;(.+)&amp;lt;/p&amp;gt;&amp;lt;scripttype=&amp;quot;text/javascript&amp;quot;&amp;gt;`)&#xA;&#xA;    //匹配专业列表&#xA;    tag_SpecialtyItem = regexp.MustCompile(`&amp;lt;a href=&amp;quot;/schoolhtm/specialty/(.+\.htm)&amp;quot; &amp;gt;(.+)&amp;lt;/a&amp;gt;`)&#xA;&#xA;    //读取专业内容&#xA;    tag_SpecialtyContent = regexp.MustCompile(`&amp;lt;divclass=&amp;quot;txt_leftline_24&amp;quot;&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;(.+)&amp;lt;/p&amp;gt;&amp;lt;scripttype=&amp;quot;text/javascript&amp;quot;&amp;gt;`)&#xA;&#xA;    //学历层次&#xA;    tag_XueLiCengCi = regexp.MustCompile(`&amp;lt;p&amp;gt;学历层次：(.+)&amp;lt;p&amp;gt;招生电话：`)&#xA;&#xA;    //学历层次项目&#xA;    tag_XueLiCengCiItem = regexp.MustCompile(`\[(.*?)\]`)&#xA;&#xA;    //招生电话&#xA;    tag_Zsdh = regexp.MustCompile(`&amp;lt;p&amp;gt;招生电话：(.+)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;通讯地址：`)&#xA;&#xA;    //通信地址&#xA;    tag_Txdz = regexp.MustCompile(`&amp;lt;p&amp;gt;通讯地址：(.+)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;电子邮箱：`)&#xA;&#xA;    //官网地址&#xA;    tag_Gwdz = regexp.MustCompile(`&amp;lt;p&amp;gt;官网地址：&amp;lt;ahref=&amp;quot;(.+)&amp;quot;target=&amp;quot;_blank&amp;quot;class=&amp;quot;blue_12&amp;quot;&amp;gt;http:`)&#xA;&#xA;    //所在地&#xA;    tag_Szd = regexp.MustCompile(`&amp;lt;p&amp;gt;所在地：(.+)院校类型：`)&#xA;    //院校类型&#xA;    tag_Yxlx = regexp.MustCompile(`院校类型：(.+)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;学历层次：`)&#xA;)&#xA;&#xA;//根据网址获得网页内容&#xA;func Get(url string) (content string, statusCode int) {&#xA;    resp, err1 := http.Get(url)&#xA;    if err1 != nil {&#xA;        statusCode = -100&#xA;        return&#xA;    }&#xA;    defer resp.Body.Close()&#xA;    data, err2 := ioutil.ReadAll(resp.Body)&#xA;    if err2 != nil {&#xA;        statusCode = -200&#xA;        return&#xA;    }&#xA;    statusCode = resp.StatusCode&#xA;    content = string(data)&#xA;    return&#xA;}&#xA;&#xA;//获得学校首页内容&#xA;func GetSchoolHome(code string) (school_home string, ret int) {&#xA;    school_url := &amp;quot;http://gkcx.test.com/schoolhtm/schoolTemple/school&amp;quot; + code + &amp;quot;.htm&amp;quot;&#xA;    s, statusCode := Get(school_url)&#xA;    if statusCode != 200 {&#xA;        school_home = &amp;quot;&amp;quot;&#xA;        ret = 1&#xA;        return&#xA;    }&#xA;    school_home = s&#xA;    ret = 0&#xA;    return&#xA;}&#xA;&#xA;//获取学校名称&#xA;func GetSchoolName(school_info string) (school_name string, xlcc_merge string, zsdh string, txdz string, gwdz string, szd string, yxlx string, ret int) {&#xA;&#xA;    match := tag_SchoolName.FindStringSubmatch(school_info)&#xA;    if match != nil {&#xA;        school_name = match[1]&#xA;        ret = 0&#xA;    } else {&#xA;        school_name = &amp;quot;&amp;quot;&#xA;        ret = 1&#xA;    }&#xA;&#xA;    school_info_temp := school_info&#xA;&#xA;    school_info_temp = tag_Space.ReplaceAllString(school_info_temp, &amp;quot;&amp;quot;)&#xA;    //fmt.Println(school_info_temp)&#xA;&#xA;    //学历层次&#xA;    xlcc := &amp;quot;&amp;quot;&#xA;    match1 := tag_XueLiCengCi.FindStringSubmatch(school_info_temp)&#xA;    if match1 != nil {&#xA;        xlcc = match1[1]&#xA;&#xA;    } else {&#xA;        xlcc = &amp;quot;&amp;quot;&#xA;&#xA;    }&#xA;&#xA;    matches := tag_XueLiCengCiItem.FindAllStringSubmatch(xlcc, 10000)&#xA;    for _, item := range matches {&#xA;        xlcc_merge += item[1] + &amp;quot;,&amp;quot;&#xA;&#xA;    }&#xA;    //fmt.Println(&amp;quot;学历层次:&amp;quot;,xlcc_merge)&#xA;&#xA;    //招生电话&#xA;&#xA;    matches = tag_Zsdh.FindAllStringSubmatch(school_info_temp, 10000)&#xA;    for _, item := range matches {&#xA;        zsdh = item[1]&#xA;&#xA;    }&#xA;    //fmt.Println(&amp;quot;招生电话:&amp;quot;,zsdh)&#xA;&#xA;    //所在地&#xA;    matches = tag_Szd.FindAllStringSubmatch(school_info_temp, 10000)&#xA;    for _, item := range matches {&#xA;        szd = item[1]&#xA;        os.MkdirAll(&amp;quot;data/&amp;quot;+szd, 0666)&#xA;    }&#xA;&#xA;    //院校类型&#xA;    matches = tag_Yxlx.FindAllStringSubmatch(school_info_temp, 10000)&#xA;    for _, item := range matches {&#xA;        yxlx = item[1]&#xA;&#xA;    }&#xA;&#xA;    //通信地址&#xA;&#xA;    matches = tag_Txdz.FindAllStringSubmatch(school_info_temp, 10000)&#xA;    for _, item := range matches {&#xA;        txdz = item[1]&#xA;&#xA;    }&#xA;    //fmt.Println(&amp;quot;通信地址:&amp;quot;,txdz)&#xA;&#xA;    //官网地址&#xA;&#xA;    matches = tag_Gwdz.FindAllStringSubmatch(school_info_temp, 10000)&#xA;    for _, item := range matches {&#xA;        gwdz = item[1]&#xA;&#xA;    }&#xA;    //fmt.Println(&amp;quot;官网地址:&amp;quot;,gwdz)&#xA;&#xA;    return&#xA;}&#xA;&#xA;//获得学校简介&#xA;func GetSchoolJj(school_home string) (school_jj string, ret int) {&#xA;&#xA;    match := tag_SchoolJjUrl.FindStringSubmatch(school_home)&#xA;    if match != nil {&#xA;        school_jj = match[1]&#xA;        ret = 0&#xA;    } else {&#xA;        school_jj = &amp;quot;&amp;quot;&#xA;        ret = 1&#xA;    }&#xA;    school_jj = &amp;quot;http://gkcx.test.com&amp;quot; + school_jj&#xA;    //fmt.Println(school_jj)&#xA;    s, statusCode := Get(school_jj)&#xA;    if statusCode != 200 {&#xA;        school_jj = &amp;quot;&amp;quot;&#xA;        ret = 1&#xA;        return&#xA;    }&#xA;    school_jj = s&#xA;    school_jj = tag_Space.ReplaceAllString(school_jj, &amp;quot;&amp;quot;)&#xA;&#xA;    //fmt.Println(school_jj)&#xA;    match_jj := tag_SchoolJj.FindStringSubmatch(school_jj)&#xA;    if match_jj != nil {&#xA;        school_jj = match_jj[1]&#xA;        school_jj = tag_PTag.ReplaceAllString(school_jj, &amp;quot;&amp;quot;)&#xA;        school_jj = tag_BrTag.ReplaceAllString(school_jj, &amp;quot;\r\n&amp;quot;)&#xA;&#xA;        ret = 0&#xA;    } else {&#xA;        school_jj = &amp;quot;&amp;quot;&#xA;        ret = 1&#xA;    }&#xA;&#xA;    return&#xA;}&#xA;&#xA;//专业列表结构体&#xA;type SpecialtyItem struct {&#xA;    url   string&#xA;    title string&#xA;}&#xA;&#xA;//获得专业列表&#xA;func findSpecialty(code string) (specialty []SpecialtyItem, err error) {&#xA;&#xA;    school_url := &amp;quot;http://gkcx.test.com/schoolhtm/specialty/specialtyList/specialty&amp;quot; + code + &amp;quot;.htm&amp;quot;&#xA;    content, statusCode := Get(school_url)&#xA;    if statusCode != 200 {&#xA;        return&#xA;    }&#xA;&#xA;    matches := tag_SpecialtyItem.FindAllStringSubmatch(content, 10000)&#xA;    specialty = make([]SpecialtyItem, len(matches))&#xA;    for i, item := range matches {&#xA;        specialty[i] = SpecialtyItem{&amp;quot;http://gkcx.test.com/schoolhtm/specialty/&amp;quot; + item[1], item[2]}&#xA;&#xA;    }&#xA;    return&#xA;}&#xA;&#xA;//获得专业内容&#xA;func readSpecialty(url string) (content string) {&#xA;&#xA;    content, statusCode := Get(url)&#xA;    if statusCode != 200 {&#xA;        content = &amp;quot;&amp;quot;&#xA;        return&#xA;    }&#xA;    content = tag_Space.ReplaceAllString(content, &amp;quot;&amp;quot;)&#xA;    //fmt.Println(content)&#xA;    match_jj := tag_SpecialtyContent.FindStringSubmatch(content)&#xA;    if match_jj != nil {&#xA;        content = match_jj[1]&#xA;        content = tag_PTag.ReplaceAllString(content, &amp;quot;&amp;quot;)&#xA;        content = tag_BrTag.ReplaceAllString(content, &amp;quot;\r\n&amp;quot;)&#xA;        content = tag_Nbsp.ReplaceAllString(content, &amp;quot; &amp;quot;)&#xA;&#xA;    } else {&#xA;        content = &amp;quot;&amp;quot;&#xA;&#xA;    }&#xA;    return&#xA;}&#xA;&#xA;func GetSchoolInfo(code string) {&#xA;    school_home, ret1 := GetSchoolHome(code)&#xA;    if ret1 != 0 {&#xA;        fmt.Println(&amp;quot;Error to get school Home Infomation!&amp;quot;, code)&#xA;        return&#xA;    }&#xA;&#xA;    //获得学校名称&#xA;    school_name, xlcc, zsdh, txdz, gwdz, szd, yxlx, ret2 := GetSchoolName(school_home)&#xA;    if ret2 != 0 {&#xA;        fmt.Println(&amp;quot;Error to get school Infomation!&amp;quot;, code)&#xA;        return&#xA;    }&#xA;&#xA;    fmt.Println(szd, school_name, code)&#xA;    fileName := fmt.Sprintf(&amp;quot;data/%s/列表_%s.txt&amp;quot;, szd, school_name)&#xA;&#xA;    //获得学校简介&#xA;    school_jj, ret3 := GetSchoolJj(school_home)&#xA;    if ret3 != 0 {&#xA;        fmt.Println(`Error to GetSchoolJj!`)&#xA;        return&#xA;    }&#xA;    //fmt.Println(school_name,school_jj)&#xA;&#xA;    cnt := fmt.Sprintf(&amp;quot;学校名称:%s\n所在地:%s\n院校类型:%s\n学历层次:%s\n招生电话:%s\n通讯地址:%s\n官网地址：%s\n学校简介:\n%s&amp;quot;, school_name, szd, yxlx, xlcc, zsdh, txdz, gwdz, school_jj)&#xA;    ioutil.WriteFile(fileName, []byte(cnt), 0644)&#xA;&#xA;    //获得专业列表&#xA;    specialty, _ := findSpecialty(code)&#xA;    for _, item := range specialty {&#xA;        //fmt.Printf(&amp;quot;获得专业 %s 的内容，来自 %s\n&amp;quot;, item.title, item.url)&#xA;        specialtyContent := readSpecialty(item.url)&#xA;        //fmt.Println(item.title,&amp;quot;====\r\n&amp;quot;,specialtyContent)&#xA;        fileName := fmt.Sprintf(&amp;quot;data/%s/列表_%s_专业_%s.txt&amp;quot;, szd, school_name, item.title)&#xA;        cnt := fmt.Sprintf(&amp;quot;%s 专业： %s \n\n%s&amp;quot;, school_name, item.title, specialtyContent)&#xA;        ioutil.WriteFile(fileName, []byte(cnt), 0644)&#xA;    }&#xA;}&#xA;&#xA;//主程序&#xA;func main() {&#xA;    //根据学校编号遍历所有大学，有些编号可能会不存在&#xA;    for i := 30; i &amp;lt; 4000; i++ {&#xA;        code := fmt.Sprintf(&amp;quot;%d&amp;quot;, i)&#xA;        if i &amp;gt; 30 &amp;amp;&amp;amp; i%50 == 0 {&#xA;            fmt.Println(&amp;quot;----------------------------&amp;quot;)&#xA;            time.Sleep(10 * 1e9) //为了减轻网站的负担，每隔50个网站睡眠10秒&#xA;&#xA;        }&#xA;        go GetSchoolInfo(code) //并发获得学校的信息&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;附录&#34; href=&#34;#附录&#34;&gt;&lt;/a&gt;附录&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;关于GO语言&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/golang.jpg&#34; alt=&#34;&#34; width=&#34;320&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Go语言是谷歌2009发布的第二款开源编程语言。&#xA;Go语言专门针对多处理器系统应用程序的编程进行了优化，使用Go编译的程序可以媲美C或C++代码的速度，而且更加安全、支持并行进程。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;GO语言官网&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.golang.org&#34; title=&#34;GO语言官网&#34;&gt;http://www.golang.org&lt;/a&gt; ，让人无法理解的是，天 朝 居然屏蔽了这个技术网站，我是一直上不去。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>最重要的十年做什么才不浪费?</title>
      <link>http://best-apps-now.com/zatan/ten_years.html</link>
      <pubDate>2014-08-15 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;导读&#34; href=&#34;#导读&#34;&gt;&lt;/a&gt;导读&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;从20岁到30的十年，有的人在念书，有的人初涉职场拼搏，有的人在蹉跎岁月、很多时候，我们在浪费了这最宝贵最美好最精力旺盛的十年之后，才醒悟过来：十年，不长但也绝对不短的时间，竟被我们的无知碾压而过，而我们什么都没做成，自此30岁以后，我们过得苦逼又压抑，还哀叹命运不济。如果再给你20岁到30岁的十年时间，你会选择做什么？以下四十六条，为我们的最重要的十年亮起了明灯，如果你还在这十年里面，请奋起急追，笨鸟先飞大器晚成的前提必定是你努力再努力，如果你早已过了这个年龄，也请你别灰心丧气，请你正视你的人生，不管怎么样，人好歹要为自己活一次，现在开始，总比不开始要好。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;一、这10年，一定要有自己的方向&#34; href=&#34;#一、这10年，一定要有自己的方向&#34;&gt;&lt;/a&gt;一、这10年，一定要有自己的方向&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.没有方向感，是最要命的&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.不管起点有多低，都要坦然接受&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.围绕自己的兴趣爱好选择职业&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.做自己最擅长的事&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.从最容易实现的目标开始做起&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;二、这10年，要做哪些准备？&#34; href=&#34;#二、这10年，要做哪些准备？&#34;&gt;&lt;/a&gt;二、这10年，要做哪些准备？&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.要过语言关&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.要有一样看家本领&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.掌握工作的全部&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.把知识变成能力&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.向成功的人学习&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6.走在时代的最前沿&lt;/p&gt;&#xA;&#xA;&lt;p&gt;7.随时记下一闪即逝的灵感&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;三、这10年，要培养的几种能力&#34; href=&#34;#三、这10年，要培养的几种能力&#34;&gt;&lt;/a&gt;三、这10年，要培养的几种能力&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.会大会小会来事&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.把话说到点子上&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.抓住问题的关键&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.不放弃，不抛弃&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.控制自己的情绪和行为&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6.站在对方的位置上&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;四、这10年，要认识到的问题&#34; href=&#34;#四、这10年，要认识到的问题&#34;&gt;&lt;/a&gt;四、这10年，要认识到的问题&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.用出色的业绩树立自己的品牌&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.世上的事，最怕认真二字&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.任何时候，都保持一颗正直的心&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.用双肩扛起自己的责任&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.让更多的人记住你&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6.工作不仅仅是为了赚钱&lt;/p&gt;&#xA;&#xA;&lt;p&gt;7.进入成功人的圈子&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;五、这10年，绝对不能浪费的东西&#34; href=&#34;#五、这10年，绝对不能浪费的东西&#34;&gt;&lt;/a&gt;五、这10年，绝对不能浪费的东西&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.抓住生活中的点滴空闲&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.用心善待身边的每一个人&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.把每份工作都当成历练自己的舞台&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.端好信誉那个碗&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.抓住擦身而过的机会&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6.节约每一分钱&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;六、这10年，如何对待金钱？&#34; href=&#34;#六、这10年，如何对待金钱？&#34;&gt;&lt;/a&gt;六、这10年，如何对待金钱？&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.成家成名之前，先成为有钱人&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.能创业就去创业&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.从小做起，一分钱也要赚&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.随波逐流永远成不了富翁&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.把废物变成宝贝&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6.先满足别人的需求&lt;/p&gt;&#xA;&#xA;&lt;p&gt;7.在为客户服务上做文章&lt;/p&gt;&#xA;&#xA;&lt;p&gt;8.让钱在流动中升值&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;七、这10年，发展重心放在什么位置？&#34; href=&#34;#七、这10年，发展重心放在什么位置？&#34;&gt;&lt;/a&gt;七、这10年，发展重心放在什么位置？&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;1.抓住当下，做好手边的工作&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.在细节上下功夫&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3.把时间和精力用在最能创造效益的地方&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4.注重个人的成长和积累&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5.成功之前做该做的事，成功之后做想做的事&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6.始终围绕自己的核心目标做事&lt;/p&gt;&#xA;&#xA;&lt;p&gt;7.打造自己的核心竞争力。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>花10分钟看一看少走30年弯路</title>
      <link>http://best-apps-now.com/zatan/no_read_no_ok.html</link>
      <pubDate>2014-08-15 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;hp大中华区总裁孙振耀退休感言-：&#34; href=&#34;#hp大中华区总裁孙振耀退休感言-：&#34;&gt;&lt;/a&gt;HP大中华区总裁孙振耀退休感言 ：&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;如果这篇文章没有分享给你，那是我的错。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果这篇文章分享给你了，你却没有读，继续走弯路的你不要怪我。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你看了这篇文章，只读了一半你就说没时间了，说明你已经是个“茫”人了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你看完了，你觉得这篇文章只是讲讲大道理，说明你的人生阅历还不够，需要你把这篇文章珍藏，走出去碰几年壁，头破血流后再回来，再读，你就会感叹自己的年少无知。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你看完了，觉得很有道理，然后束之高阁，继续走进拥挤的地铁，依然用着自己昨日的观念来思考自己的未来，你的人生也将继续重复着昨日的状况。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你看完了，觉得那是一个过来人，对你的人生忠告，并你也愿意用他告诉你的思想去指导自己今后的生活，对你来讲成功不是很难，难的是你是否可以用这篇文章里的思想一直鞭策自己。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果你看完了，觉得那是一个长辈用他的一生的时间来写的一篇对你忠告的文章，说明你已经有了和他相似的人生阅历，只要你继续努力，成就伟业并不难，难的是你是否可以把自己的人生经验和他人分享呢？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;体验决定深度，知识决定广度。你的人生是什么呢？&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;一、关于工作与生活&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;我有个有趣的观察，外企公司多的是25-35岁的白领，40岁以上的员工很少，二三十岁的外企员工是意气风发的，但外企公司40岁附近的经理人是很尴尬的。我见过的40岁附近的外企经理人大多在一直跳槽，最后大多跳到民企，比方说，唐骏。外企员工的成功很大程度上是公司的成功，并非个人的成功，西门子的确比国美大，但并不代表西门子中国经理比国美的老板强，甚至可以说差得很远。而进外企的人往往并不能很早理解这一点，把自己的成功90％归功于自己的能力，实际上，外企公司随便换个中国区总经理并不会给业绩带来什么了不起的影响。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;好了问题来了，当这些经理人40多岁了，他们的薪资要求变得很高，而他们的才能其实又不是那么出众，作为外企公司的老板，你会怎么选择？有的是只要不高薪水的，要出位的精明强干精力充沛的年轻人，有的是，为什么还要用你？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;从上面这个例子，其实可以看到我们的工作轨迹，二三十岁的时候，生活的压力还比较小，身体还比较好，上面的父母身体还好，下面又没有孩子，不用还房贷，也没有孩子要上大学，当个外企小白领还是很光鲜的，挣得不多也够花了。但是人终归要结婚生子，终归会老，到了40岁，父母老了，要看病要吃药，要有人看护，自己要还房贷，要过基本体面的生活，要养小孩……那个时候需要挣多少钱才够花才重要。所以，看待工作，眼光要放远一点，一时的谁高谁低并不能说明什么。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;从这个角度上来说，我不太赞成过于关注第一份工作的薪水，更没有必要攀比第一份工作的薪水，这在刚刚出校园的学生中间是很常见的。正常人大概要工作35年，这好比是一场马拉松比赛，和真正的马拉松比赛不同的是，这次比赛没有职业选手，每个人都只有一次机会。要知到，有很多人甚至坚持不到终点，大多数人最后是走到终点的，只有少数人是跑过终点的，因此在刚开始的时候，去抢领先的位置并没有太大的意义。刚进社会的时候如果进500强公司，大概能拿到3k -6k/月的工资，有些特别技术的人才可能可以到8k/月，可问题是，5年以后拿多少？估计5k-10k了不起了。起点虽然高，但增幅有限，而且，后面的年轻人追赶的压力越来越大。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我前两天问我的一个销售，你会的这些东西一个新人2年就都学会了，但新人所要求的薪水却只是你的一半，到时候，你怎么办？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;职业生涯就像一场体育比赛，有初赛、复赛、决赛。初赛的时候大家都刚刚进社会，大多数都是实力一般的人，这时候努力一点认真一点很快就能让人脱颖而出，于是有的人二十多岁做了经理，有的人迟些也终于赢得了初赛，三十多岁成了经理。然后是复赛，能参加复赛的都是赢得初赛的，每个人都有些能耐，在聪明才智上都不成问题，这个时候再想要胜出就不那么容易了，单靠一点点努力和认真还不够，要有很强的坚忍精神，要懂得靠团队的力量，要懂得收服人心，要有长远的眼光……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;看上去赢得复赛并不容易，但，还不是那么难。因为这个世界的规律就是给人一点成功的同时让人骄傲自满，刚刚赢得初赛的人往往不知道自己赢得的仅仅是初赛，有了一点小小的成绩大多数人都会骄傲自满起来，认为自己已经懂得了全部，不需要再努力再学习了，他们会认为之所以不能再进一步已经不是自己的原因了。虽然他们仍然不好对付，但是他们没有耐性，没有容人的度量，更没有清晰长远的目光。就像一只愤怒的斗牛，虽然猛烈，最终是会败的，而赢得复赛的人则象斗牛士一样，不急不躁，跟随着自己的节拍，慢慢耗尽对手的耐心和体力。赢得了复赛以后，大约已经是一位很了不起的职业经理人了，当上了中小公司的总经理，大公司的副总经理，主管着每年几千万乃至几亿的生意。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;最终的决赛来了，说实话我自己都还没有赢得决赛，因此对于决赛的决胜因素也只能凭自己的猜测而已，这个时候的输赢或许就像武侠小说里写得那样，大家都是高手，只能等待对方犯错了，要想轻易击败对手是不可能的，除了使上浑身解数，还需要一点运气和时间。世界的规律依然发挥着作用，赢得复赛的人已经不只是骄傲自满了，他们往往刚愎自用，听不进去别人的话，有些人的脾气变得暴躁，心情变得浮躁，身体变得糟糕，他们最大的敌人就是他们自己，在决赛中要做的只是不被自己击败，等着别人被自己击败。这和体育比赛是一样的，最后高手之间的比赛，就看谁失误少谁就赢得了决赛。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;二、 根源&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;你工作快乐么？你的工作好么？&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;有没有觉得干了一段时间以后工作很不开心？有没有觉得自己入错了行？有没有觉得自己没有得到应有的待遇？有没有觉得工作像一团乱麻每天上班都是一种痛苦？有没有很想换个工作？有没有觉得其实现在的公司并没有当初想象得那么好？有没有觉得这份工作是当初因为生存压力而找的，实在不适合自己？你从工作中得到你想要得到的了么？你每天开心么？&lt;/p&gt;&#xA;&#xA;&lt;h4&gt;天涯上愤怒的人很多，你有没有想过，你为什么不快乐？你为什么愤怒？&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;其实，你不快乐的根源，是因为你不知道要什么！你不知道要什么，所以你不知道去追求什么，你不知道追求什么，所以你什么也得不到。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我总觉得，职业生涯首先要关注的是自己，自己想要什么？大多数人大概没想过这个问题，唯一的想法只是——我想要一份工作，我想要一份不错的薪水，我知道所有人对于薪水的渴望，可是，你想每隔几年重来一次找工作的过程么？你想每年都在这种对于工作和薪水的焦急不安中度过么？不想的话，就好好想清楚。饮鸩止渴，不能因为口渴就拼命喝毒药。越是焦急，越是觉得自己需要一份工作，越饥不择食，越想不清楚，越容易失败，你的经历越来越差，下一份工作的人看着你的简历就皱眉头。于是你越喝越渴，越渴越喝，陷入恶性循环。最终只能哀叹，世事不公或者生不逢时，只能到天涯上来发泄一把，在失败者的共鸣当中寻求一点心理平衡罢了。大多数人都有生存压力，我也是，有生存压力就会有很多焦虑，积极的人会从焦虑中得到动力，而消极的人则会因为焦虑而迷失方向。所有人都必须在压力下做出选择，这就是世道，你喜欢也罢不喜欢也罢。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;一般我们处理的事情分为重要的事情和紧急的事情，如果不做重要的事情就会常常去做紧急的事情。比如锻炼身体保持健康是重要的事情，而看病则是紧急的事情。如果不锻炼身体保持健康，就会常常为了病痛烦恼。又比如防火是重要的事情，而救火是紧急的事情，如果不注意防火，就要常常救火。找工作也是如此，想好自己究竟要什么是重要的事情，找工作是紧急的事情，如果不想好，就会常常要找工作。往往紧急的事情给人的压力比较大，迫使人们去赶紧做，相对来说重要的事情反而没有那么大的压力，大多数人做事情都是以压力为导向的，压力之下，总觉得非要先做紧急的 事情，结果就是永远到处救火，永远没有停歇的时候。（很多人的工作也像是救火队一样忙碌痛苦，也是因为工作中没有做好重要的事情。）那些说自己活在水深火热为了生存顾不上那么多的朋友，今天找工作困难是当初你们没有做重要的事情，是结果不是原因。如果今天你们还是因为急于要找一份工作而不去思考，那么或许将来要继续承受痛苦找工作的结果。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我始终，觉得我要说的话题，沉重了点，需要很多思考，远比唐笑打武警的话题来的枯燥乏味，但是，天下没有轻松的成功，成功，要付代价。请先忘记一切的生存压力，想想这辈子你最想要的是什么？所以，最要紧的事情，先想好自己想要什么。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;三、什么是好工作&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;当初微软有个唐骏，很多大学里的年轻人觉得这才是他们向往的职业生涯，我在清华bbs里发的帖子被这些学子们所不屑，那个时候学生们只想出国或者去外企，不过如今看来，我还是对的，唐骏去了盛大，陈天桥创立的盛大，一家民营公司。一个高学历的海归在500强的公司里拿高薪水，这大约是很多年轻人的梦想，问题是，每年毕业的大学生都在做这个梦，好的职位却只有500个。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;人都是要面子的，也是喜欢攀比的，即使在工作上也喜欢攀比，不管那是不是自己想要的。大家认为外企公司很好，可是好在哪里呢？好吧，他们在比较好的写字楼，这是你想要的么？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;他们出差住比较好的酒店，这是你想要的么？别人会羡慕一份外企公司的工作，这是你想要的么？那一切都是给别人看的，你干吗要活得那么辛苦给别人看？另一方面，他们薪水福利一般，并没有特别了不起，他们的晋升机会比较少，很难做到很高阶的主管，他们虽然厌恶常常加班，却不敢不加班，因为“你不干有得是人干”，大部分情况下会找个台湾人、香港人、新加坡人来管你，而这些人又往往有些莫名其妙的优越感。你想清楚了么？500强一定好么？找工作究竟是考虑你想要什么，还是考虑别人想看什么？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我的大学同学们大多数都到美国了，甚至毕业这么多年了，还有人最近到国外去了。出国真的有那么好么？我的大学同学们，大多数还是在博士、博士后、访问学者地挣扎着，至今只有一个正经在一个美国大学里拿到个正式的教职。国内的教授很难当么？我有几个表亲也去了国外了，他们的父母独自在国内，没有人照顾，有好几次人在家里昏倒都没人知道，出国，真的这么光彩么？就像有人说的“很多事情就像看**，看的人觉得很爽，做的人未必。”&lt;/p&gt;&#xA;&#xA;&lt;p&gt;人总想找到那个最好的，可是，什么是最好的？你觉得是最好的那个，是因为你的确了解，还是因为别人说他是最好的？即使他对于别人是最好的，对于你也一定是最好的么？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对于自己想要什么，自己要最清楚，别人的意见并不是那么重要。很多人总是常常被别人的意见所影响，亲戚的意见，朋友的意见，同事的意见……问题是，你究竟是要过谁的一生？人的一生不是父母一生的续集，也不是儿女一生的前传，更不是朋友一生的外篇，只有你自己对自己的一生负责，别人无法也负不起这个责任。自己做的决定，至少到最后，自己没什么可后悔。对于大多数正常智力的人来说，所做的决定没有大的对错，无论怎么样的选择，都是可以尝试的。比如你没有考自己上的那个学校，没有入现在这个行业，这辈子就过不下去了？就会很失败？不见得。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我想，好工作，应该是适合你的工作，具体点说，应该是能给你带来你想要的东西的工作，你或许应该以此来衡量你的工作究竟好不好，而不是拿公司的大小，规模，外企还是国企，是不是有名，是不是上市公司来衡量。小公司，未必不是好公司，赚钱多的工作，也未必是好工作。你还是要先弄清楚你想要什么，如果你不清楚你想要什么，你就永远也不会找到好工作，因为你永远只看到你得不到的东西，你得到的，都是你不想要的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;可能，最好的，已经在你的身边，只是，你还没有学会珍惜。人们总是盯着得不到的东西，而忽视了那些已经得到的东西。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;四、普通人&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;我发现中国人的励志和国外的励志存在非常大的不同，中国的励志比较鼓励人立下大志愿，卧薪尝胆，有朝一日成富成贵。而国外的励志比较鼓励人勇敢面对现实生活，面对普通人的困境，虽然结果也是成富成贵，但起点不一样，相对来说，我觉得后者在操作上更现实，而前者则需要用999个失败者来堆砌一个成功者的故事。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我们都是普通人，普通人的意思就是，概率这件事是很准的。因此，我们不会买彩票中500万，我们不会成为比尔盖茨或者李嘉诚，我们不会坐飞机掉下来，我们当中很少的人会创业成功，我们之中有30％的人会离婚，我们之中大部分人会活过65岁……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;所以请你在想自己要什么的时候，要得“现实”一点，你说我想要做李嘉诚，抱歉，我帮不上你。成为比尔盖茨或者李嘉诚这种人，是靠命的，看我写的这篇文章绝对不会让你成为他们，即使你成为了他们，也绝对不是我这篇文章的功劳。“王侯将相宁有种乎”但真正当皇帝的只有一个人，王侯将相，人也不多。目标定得高些对于喜欢挑战的人来说有好处，但对于大多数普通人来说，反而比较容易灰心沮丧，很容易就放弃了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;回过头来说，李嘉诚比你有钱大致50万倍，他比你更快乐么？或许。有没有比你快乐50万倍，一定没有。他比你最多也就快乐一两倍，甚至有可能还不如你快乐。寻找自己想要的东西不是和别人比赛，比谁要得更多更高，比谁的目标更远大。虽然成为李嘉诚这个目标很宏大，但你并不见得会从这个目标以及追求目标的过程当中获得快乐，而且基本上你也做不到。你必须听听你内心的声音，寻找真正能够使你获得快乐的东西，那才是你想要的东西。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你想要的东西，或者我们把它称之为目标，目标其实并没有高低之分，你不需要因为自己的目标没有别人远大而不好意思，达到自己的目标其实就是成功，成功有大有小，快乐却是一样的。我们追逐成功，其实追逐的是成功带来的快乐，而非成功本身。职业生涯的道路上，我们常常会被攀比的心态蒙住眼睛，忘记了追求的究竟是什么，忘记了是什么能使我们更快乐。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;社会上一夜暴富的新闻很多，这些消息，总会在我们的心里面掀起很多涟漪，涟漪多了就变成惊涛骇浪，心里的惊涛骇浪除了打翻承载你目标的小船，并不会使得你也一夜暴富。“只见贼吃肉，不见贼挨揍。”我们这些普通人既没有当贼的勇气，又缺乏当贼的狠辣绝决，虽然羡慕吃肉，却更害怕挨揍，偶尔看到几个没挨揍的贼就按奈不住，或者心思活动，或者大感不公，真要叫去做贼，却也不敢。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我还是过普通人的日子，要普通人的快乐，至少，晚上睡得着觉。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;五、跳槽与积累&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;首先要说明，工作是一件需要理智的事情，所以不要在工作上耍个性，天涯上或许会有人觉得你很有个性而叫好，煤气公司电话公司不会因为觉得你很有个性而免了你的帐单。当你很帅地炒掉了你的老板，当你很酷地挖苦了一番招聘的HR，账单还是要照付，只是你赚钱的时间更少了，除了你自己，没人受损失。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我并不反对跳槽，但跳槽决不是解决问题的办法，而且频繁跳槽的后果是让人觉得没有忠诚度可言，而且不能安心工作。现在很多人从网上找工作，很多找工作的网站常常给人出些馊主意，要知道他们是盈利性企业，当然要从自身盈利的角度来考虑，大家越是频繁跳槽频繁找工作他们越是生意兴隆，所以鼓动人们跳槽是他们的工作。所以他们会常常告诉你，你拿的薪水少了，你享受的福利待遇差了，又是“薪情快报”又是“赞叹自由奔放的灵魂”。至于是否会因此让你不能安心，你跳了槽是否解决问题，是否更加开心，那个，他们管不着。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;要跳槽肯定是有问题，一般来说问题发生了，躲是躲不开的，很多人跳槽是因为这样或者那样的不开心，如果这种不开心，在现在这个公司不能解决，那么在下一个公司多半也解决不掉。你必须相信，90%的情况下，你所在的公司并没有那么烂，你认为不错的公司也没有那么好。就像围城里说的，“城里的人拼命想冲出来，而城外的人拼命想冲进去。”每个公司都有每个公司的问题，没有问题的公司是不存在的。换个环境你都不知道会碰到什么问题，与其如此，不如就在当下把问题解决掉。很多问题当你真的想要去解决的时候，或许并没有那么难。有的时候你觉得问题无法解决，事实上，那只是“你觉得”。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;人生的曲线应该是曲折向上的，偶尔会遇到低谷但大趋势总归是曲折向上的，而不是象脉冲波一样每每回到起点，我见过不少面试者，30多岁了，四五份工作经历，每次多则3年，少则1年，30多岁的时候回到起点从一个初级职位开始干起，拿基本初级的薪水，和20多岁的年轻人一起竞争，不觉得有点辛苦么？这种日子好过么？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;资本靠的就是积累，这种积累包括人际关系，经验，人脉，口碑……如果常常更换行业，代表几年的积累付之东流，一切从头开始，如果换了两次行业，35岁的时候大概只有5年以下的积累，而一个没有换过行业的人至少有了10年的积累，谁会占优势？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;工作到2-3年的时候，很多人觉得工作不顺利，好像到了一个瓶颈，心情烦闷，就想辞职，乃至换一个行业，觉得这样所有一切烦恼都可以抛开，会好很多。其实这样做只是让你从头开始，到了时候还是会发生和原来行业一样的困难，熬过去就向上跨了一大步，要知道每个人都会经历这个过程，每个人的职业生涯中都会碰到几个瓶颈，你熬过去了而别人没有熬过去你就领先了。跑长跑的人会知道，开始的时候很轻松，但是很快会有第一次的难受，但过了这一段又能跑很长一段，接下来会碰到第二次的难受，坚持过了以后又能跑一段，如此往复，难受一次比一次厉害，直到坚持不下去了。大多数人第一次就坚持不了了，一些人能坚持到第二次，第三次虽然大家都坚持不住了，可是跑到这里的人也没几个了，这点资本足够你安稳活这一辈子了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;一份工作到两三年的时候，大部分人都会变成熟手，这个时候往往会陷入不断的重复，有很多人会觉得厌倦，有些人会觉得自己已经搞懂了一切，从而懒得去寻求进步了。很多时候的跳槽是因为觉得失去兴趣了，觉得自己已经完成比赛了。其实这个时候比赛才刚刚开始，工作两三年的人，无论是客户关系，人脉，手下，和领导的关系，在业内的名气……还都是远远不够的，但稍有成绩的人总是会自我感觉良好的，每个人都觉得自己跟客户关系铁得要命，觉得自己在业界的口碑好得很。其实可以肯定地说，一定不是，这个时候，还是要拿出前两年的干劲来，稳扎稳打，积累才刚刚开始。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你足够了解你的客户吗？你知道他最大的烦恼是什么吗？你足够了解你的老板么？你知道他最大的烦恼是什么吗？你足够了解你的手下么？你知道他最大的烦恼是什么吗？如果你不知道，你凭什么觉得自己已经积累够了？如果你都不了解，你怎么能让他们帮你的忙，做你想让他们做的事情？如果他们不做你想让他们做的事情，你又何来的成功？&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;六、等待&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;这是个浮躁的人们最不喜欢的话题，本来不想说这个话题，因为会引起太多的争论，而我又无意和人争论这些，但是考虑到对于职业生涯的长久规划，这是一个躲避不了的话题，还是决定写一写，不爱看的请离开吧。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;并不是每次穿红灯都会被汽车撞，并不是每个罪犯都会被抓到，并不是每个错误都会被惩罚，并不是每个贪官都会被枪毙，并不是你的每一份努力都会得到回报，并不是你的每一次坚持都会有人看到，并不是你每一点付出都能得到公正的回报，并不是你的每一个善意都能被理解……这个，就是世道。好吧，世道不够好，可是，你有推翻世道的勇气么？如果没有，你有更好的解决办法么？有很多时候，人需要一点耐心，一点信心。每个人总会轮到几次不公平的事情，而通常，安心等待是最好的办法。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有很多时候我们需要等待，需要耐得住寂寞，等待属于你的那一刻。周润发等待过，刘德华等待过，周星驰等待过，王菲等待过，张艺谋也等待过……看到了他们如今的功成名就的人，你可曾看到当初他们的等待和耐心？你可曾看到金马奖影帝在街边摆地摊？你可曾看到德云社一群人在剧场里给一位观众说相声？你可曾看到周星驰的角色甚至连一句台词都没有？每一个成功者都有一段低沉苦闷的日子，我几乎能想象得出来他们借酒浇愁的样子，我也能想象得出他们为了生存而挣扎的窘迫。在他们一生最中灿烂美好的日子里，他们渴望成功，但却两手空空，一如现在的你。没有人保证他们将来一定会成功，而他们的选择是耐住寂寞。如果当时的他们总念叨着“成功只是属于特权阶级的”，你觉得他们今天会怎样？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;曾经我也不明白有些人为什么并不比我有能力却要坐在我的头上，年纪比我大就一定要当我的领导么？为什么有些烂人不需要努力就能赚钱？为什么刚刚改革开放的时候的人能那么容易赚钱，而轮到我们的时候，什么事情都要正规化了？有一天我突然想，我还在上学的时候他们就在社会里挣扎奋斗了，他们在社会上奋斗积累了十几二十年，我们新人来了，他们有的我都想要，我这不是在要公平，我这是在要抢劫。因为我要得太急，因为我忍不住寂寞。二十多岁的男人，没有钱，没有事业，却有蓬勃的欲望。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;人总是会遇到挫折的，人总是会有低潮的，人总是会有不被人理解的时候的，人总是有要低声下气的时候，这些时候恰恰是人生最关键的时候，因为大家都会碰到挫折，而大多数人过不了这个门槛，你能过，你就成功了。在这样的时刻，我们需要耐心等待，满怀信心地去等待，相信，生活不会放弃你，机会总会来的。至少，你还年轻，你没有坐牢，没有生治不了的病，没有欠还不起的债。比你不幸的人远远多过比你幸运的人，你还怕什么？路要一步步走，虽然到达终点的那一步很激动人心，但大部分的脚步是平凡甚至枯燥的，但没有这些脚步，或者耐不住这些平凡枯燥，你终归是无法迎来最后的那些激动人心。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;逆境，是上帝帮你淘汰竞争者的地方。要知道，你不好受，别人也不好受，你坚持不下去了，别人也一样，千万不要告诉别人你坚持不住了，那只能让别人获得坚持的信心，让竞争者看着你微笑的面孔，失去信心，退出比赛。胜利属于那些有耐心的人。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在最绝望的时候，我会去看电影《The Pursuit of Happyness》《Jerry Maguire》，让自己重新鼓起勇气，因为，无论什么时候，我们总还是有希望。当所有的人离开的时候，我不失去希望，我不放弃。每天下班坐在车里，我喜欢哼着《隐形的翅膀》看着窗外，我知道，我在静静等待，等待属于我的那一刻。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;七、入对行 跟对人&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;在中国，大概很少有人是一份职业做到底的，虽然如此，第一份工作还是有些需要注意的地方，有两件事情格外重要，第一件是入行，第二件事情是跟人。第一份工作对人最大的影响就是入行，现代的职业分工已经很细，我们基本上只能在一个行业里成为专家，不可能在多个行业里成为专家。很多案例也证明即使一个人在一个行业非常成功，到另外一个行业，往往完全不是那么回事情，“你想改变世界，还是想卖一辈子汽水？”是乔布斯邀请百事可乐总裁约翰·斯考利加盟苹果时所说的话，结果这位在百事非常成功的约翰，到了苹果表现平平。其实没有哪个行业特别好，也没有哪个行业特别差，或许有报道说哪个行业的平均薪资比较高，但是他们没说的是，那个行业的平均压力也比较大。看上去很美的行业一旦进入才发现很多地方其实并不那么完美，只是外人看不见。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;说实话，我自己都没有发大财，所以我的建议只是让人快乐工作的建议，不是如何发大财的建议，我们只讨论一般普通打工者的情况。我认为选择什么行业并没有太大关系，看问题不能只看眼前。比如，从前年开始，国家开始整顿医疗行业，很多医药公司开不下去，很多医药行业的销售开始转行。其实医药行业的不景气是针对所有公司的，并非针对一家公司，大家的日子都不好过，这个时候跑掉是非常不划算的，大多数正规的医药公司即使不做新生意撑个两三年总是能撑的，大多数医药销售靠工资撑个两三年也是可以撑的，国家不可能永远捏着医药行业不放的，两三年以后光景总归还会好起来的，那个时候别人都跑了而你没跑，那时的日子应该会好过很多。有的时候觉得自己这个行业不行了，问题是，再不行的行业，做得人少了也变成了好行业，当大家都觉得不好的时候，往往却是最好的时候。大家都觉得金融行业好，金融行业门槛高不说，有多少人削尖脑袋要钻进去，竞争激励，进去以后还要时时提防，一个疏忽，就被后来的人给挤掉了，压力巨大，又如何谈得上快乐？也就未必是“好”工作了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;太阳能这个东西至今还不能进入实际应用的阶段，但是中国已经有7家和太阳能有关的公司在纽交所上市了，国美苏宁永乐其实是贸易型企业，也能上市，鲁泰纺织连续10年利润增长超过50%，卖茶的一茶一座，卖衣服的海澜之家都能上市……其实选什么行业真的不重要，关键是怎么做。事情都是人做出来的，关键是人。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有一点是需要记住的，这个世界上，有史以来直到我们能够预见得到的未来，成功的人总是少数，有钱的人总是少数，大多数人是一般的，普通的，不太成功的。因此，大多数人的做法和看法，往往都不是距离成功最近的做法和看法。因此大多数人说好的东西不见得好，大多数人说不好的东西不见得不好。大多数人都去炒股的时候说明跌只是时间问题，大家越是热情高涨的时候，跌的日子越近。大多数人买房子的时候，房价不会涨，而房价涨的差不多的时候，大多数人才开始买房子。不会有这样一件事情让大家都变成功，发了财，历史上不曾有过，将来也不会发生。有些东西即使一时运气好得到了，还是会在别的时候别的地方失去的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;年轻人在职业生涯的刚开始，尤其要注意的是，要做对的事情，不要让自己今后几十年的人生总是提心吊胆，更不值得为了一份工作赔上自己的青春年华。我的公司是个不行贿的公司，以前很多人不理解，甚至自己的员工也不理解，不过如今，我们是同行中最大的企业，客户乐意和我们打交道，尤其是在国家打击腐败的时候，每个人都知道我们做生意不给钱的名声，都敢于和我们做生意。而勇于给钱的公司，不是倒了，就是跑了，要不就是每天睡不好觉，人还是要看长远一点。很多时候，看起来最近的路，其实是最远的路，看起来最远的路，其实是最近的路。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;跟对人是说，入行后要跟个好领导好老师，刚进社会的人做事情往往没有经验，需要有人言传身教。对于一个人的发展来说，一个好领导是非常重要的。所谓“好”的标准，不是他让你少干活多拿钱，而是以下三个。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先，好领导要有宽广的心胸，如果一个领导每天都会发脾气，那几乎可以肯定他不是个心胸宽广的人，能发脾气的时候却不发脾气的领导，多半是非常厉害的领导。中国人当领导最大的毛病是容忍不了能力比自己强的人，所以常常可以看到的一个现象是，领导很有能力，手下一群庸才或者手下一群闲人。如果看到这样的环境，还是不要去的好。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;其次，领导要愿意从下属的角度来思考问题，这一点其实是从面试的时候就能发现的，如果这位领导总是从自己的角度来考虑问题，几乎不听你说什么，这就危险了。从下属的角度来考虑问题并不代表同意下属的说法，但他必须了解下属的立场，下属为什么要这么想，然后他才有办法说服你，只关心自己怎么想的领导往往难以获得下属的信服。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第三，领导敢于承担责任，如果出了问题就把责任往下推，有了功劳就往自己身上揽，这样的领导不跟也罢。选择领导，要选择关键时刻能抗得住的领导，能够为下属的错误买单的领导，因为这是他作为领导的责任。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有可能，你碰不到好领导，因为，中国的领导往往是屁股决定脑袋的领导，因为他坐领导的位置，所以他的话就比较有道理，这是传统观念官本位的误区，可能有大量的这种无知无能的领导，只是，这对于你其实是好事，如果将来有一天你要超过他，你希望他比较聪明还是比较笨？相对来说这样的领导其实不难搞定，只是你要把自己的身段放下来而已。多认识一些人，多和比自己强的人打交道，同样能找到好的老师，不要和一群同样郁闷的人一起控诉社会，控诉老板，这帮不上你，只会让你更消极。和那些比你强的人打交道，看他们是怎么想的，怎么做的，学习他们，然后跟更强的人打交道。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;八、选择&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;我们每天做的最多的事情，其实是选择，因此在谈职业生涯的时候不得不提到这个话题。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我始终认为，在很大的范围内，我们究竟会成为一个什么样的人，决定权在我们自己，每天我们都在做各种各样的选择，我可以不去写这篇文章，去别人的帖子拍拍砖头，也可以写下这些文字，帮助别人的同时也整理自己的思路，我可以多注意下格式让别人易于阅读，也可以写成一堆，我可以就这样发上来，也可以在发以前再看几遍，你可以选择不刮胡子就去面试，也可以选择出门前照照镜子……每天，每一刻我们都在做这样那样的决定，我们可以漫不经心，也可以多花些心思，成千上万的小选择累计起来，就决定了最终我们是个什么样的人。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;从某种意义上来说，我们的未来不是别人给的，是我们自己选择的，很多人会说我命苦啊，没得选择阿，如果你认为“去微软还是去IBM”“上清华还是上北大”“当销售副总还是当厂长”这种才叫选择的话，的确你没有什么选择，大多数人都没有什么选择。但每天你都可以选择是否为客户服务更周到一些，是否对同事更耐心一些，是否把工作做得更细致一些，是否把情况了解得更清楚一些，是否把不清楚的问题再弄清楚一些……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你也可以选择在是否在痛苦中继续坚持，是否抛弃掉自己的那些负面的想法，是否原谅一个人的错误，是否相信我在这里写下的这些话，是否不要再犯同样的错误……生活每天都在给你选择的机会，每天都在给你改变自己人生的机会，你可以选择赖在地上撒泼打滚，也可以选择咬牙站起来。你永远都有选择。有些选择不是立杆见影的，需要累积，比如农民可以选择自己常常去浇地，也可以选择让老天去浇地，诚然你今天浇水下去苗不见得今天马上就长出来，但常常浇水，大部分苗终究会长出来的，如果你不浇，收成一定很糟糕。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;每天生活都在给你机会，他不会给你一叠现金也不会拱手送你个好工作，但实际上，他还是在给你机会。我的家庭是一个普通的家庭，没有任何了不起的社会关系，我的父亲在大学毕业以后就被分配到了边疆，那个小县城只有一条马路，他们那一代人其实比我们更有理由抱怨，他们什么也没得到，年轻的时候文化大革命，书都没得读，支援边疆插队落户，等到老了，却要给年轻人机会了。他有足够的理由象成千上万那样的青年一样坐在那里抱怨生不逢时，怨气冲天。然而在分配到边疆的十年之后，国家恢复招研究生，他考回了原来的学校。研究生毕业，他被分配到了安徽一家小单位里，又是3年以后，国家第一届招收博士生，他又考回了原来的学校，成为中国第一代博士，那时的他比现在的我年纪还大。生活并没有放弃他，他也没有放弃生活。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;10年的等待，他做了他自己的选择，他没有放弃，他没有破罐子破摔，所以时机到来的时候，他改变了自己的人生。你最终会成为什么样的人，就决定在你的每个小小的选择之间。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你选择相信什么？你选择和谁交朋友？你选择做什么？你选择怎么做？……我们面临太多的选择，而这些选择当中，意识形态层面的选择又远比客观条件的选择来得重要得多，比如选择做什么产品其实并不那么重要，而选择怎么做才重要。选择用什么人并不重要，而选择怎么带这些人才重要。大多数时候选择客观条件并不要紧，大多数关于客观条件的选择并没有对错之分，要紧的是选择怎么做。一个大学生毕业了，他要去微软也好，他要卖猪肉也好，他要创业也好，他要做游戏代练也好，只要不犯法，不害人，都没有什么关系，要紧的是，选择了以后，怎么把事情做好。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;除了这些，你还可以选择时间和环境，比如，你可以选择把这辈子最大的困难放在最有体力最有精力的时候，也可以走一步看一步，等到了40岁再说，只是到了40多岁，那正是一辈子最脆弱的时候，上有老下有小，如果在那个时候碰上了职业危机，实在是一件很苦恼的事情。与其如此不如在20多岁30多岁的时候吃点苦，好让自己脆弱的时候活得从容一些。你可以选择在温室里成长，也可以选择到野外磨砺，你可以选择在办公室吹冷气的工作，也可以选择40度的酷热下，去见你的客户，只是，这一切最终会累积起来，引导你到你应得的未来。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我不敢说所有的事情你都有得选择，但是绝大部分事情你有选择，只是往往你不把这当作一种选择。认真对待每一次选择，才会有比较好的未来。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;九、职业&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;职业的选择，总的来说，无非就是销售、市场、客服、物流、行政、人事、财务、技术、管理几个大类，有个有趣的现象就是，500强的CEO当中最多的是销售出身，第二多的人是财务出身，这两者加起来大概超过95%。现代IT行业也有技术出身成为老板的，但实际上，后来他们还是从事了很多销售和市场的工作，并且表现出色，公司才获得了成功，完全靠技术能力成为公司老板的，几乎没有。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这是有原因的，因为销售就是一门跟人打交道的学问，而管理其实也是跟人打交道的学问，这两者之中有很多相通的东西，他们的共同目标就是“让别人去做某件特定的事情。”而财务则是从数字的层面了解生意的本质，从宏观上看待生意的本质，对于一个生意是否挣钱，是否可以正常运作有着最深刻的认识。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;公司小的时候是销售主导公司，而公司大的时候是财务主导公司，销售的局限性在于只看人情不看数字，财务的局限性在于只看数字不看人情。公司初期，运营成本低，有订单就活得下去，跟客户也没有什么谈判的条件，别人肯给生意做已经谢天谢地了，这个时候订单压倒一切，客户的要求压倒一切，所以当然要顾人情。公司大了以后，一切都要规范化，免得因为不规范引起一些不必要的风险，同时运营成本也变高，必须提高利润率，把有限的资金放到最有产出的地方。对于上市公司来说，股东才不管你客户是不是最近出国，最近是不是那个省又在搞严打，到了时候就要把业绩拿出来，拿不出来就抛股票，这个时候就是数字压倒一切。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;前两天听到有人说一句话觉得很有道理，开始的时候我们想“能做什么？”，等到公司做大了有规模了，我们想“不能做什么。”很多人在工作中觉得为什么领导这么保守，这也不行那也不行，错过很多机会。很多时候是因为，你还年轻，你想的是“能做什么”，而作为公司领导要考虑的方面很多，他比较关心“不能做什么”。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我并非鼓吹大家都去做销售或者财务，究竟选择什么样的职业，和你究竟要选择什么样的人生有关系，有些人就喜欢下班按时回家，看看书听听音乐，那也挺好，但就不适合找个销售的工作了，否则会是折磨自己。有些人就喜欢出风头，喜欢成为一群人的中心，如果选择做财务工作，大概也干不久，因为一般老板不喜欢财务太积极，也不喜欢财务话太多。先想好自己要过怎样的人生，再决定要找什么样的职业。有很多的不快乐，其实是源自不满足，而不满足，很多时候是源自于心不定，而心不定则是因为不清楚究竟自己要什么，不清楚要什么的结果就是什么都想要，结果什么都没得到。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我想，我们还是因为生活而工作，不是因为工作而生活，生活是最要紧的，工作只是生活中的一部分。我总是觉得生活的各方方面都是相互影响的，如果生活本身一团乱麻，工作也不会顺利。所以要有娱乐、要有社交、要锻炼身体，要有和睦的家庭……最要紧的，要开心，我的两个销售找我聊天，一肚子苦水，我问他们，2年以前，你什么都没有，工资不高，没有客户关系，没有业绩，处于被开的边缘，现在的你比那时条件好了很多，为什么现在却更加不开心了？如果你做得越好越不开心，那你为什么还要工作？首先的首先，人还是要让自己高兴起来，让自己心态好起来，这种发自内心的改变会让你更有耐心，更有信心，更有气质，更能包容……否则，看看镜子里的你，你满意么？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;有人会说，你说得容易，我每天加班，不加班老板就会把我炒掉，每天累得要死，哪有时间娱乐、社交、锻炼？那是人们把目标设定太高的缘故，如果你还在动不动就会被老板炒掉的边缘，那么你当然不能设立太高的目标，难道你还想每天去打高尔夫？你没时间去健身房锻炼身体，但是上下班的时候多走几步可以吧，有楼梯的时候走走楼梯不走电梯可以吧？办公的间隙扭扭脖子拉拉肩膀做做俯卧撑可以吧？谁规定锻炼就一定要拿出每天2个小时去健身房？你没时间社交，每月参加郊游一次可以吧，周末去参加个什么音乐班，绘画班之类的可以吧，去尝试认识一些同行，和他们找机会交流交流可以吧？开始的时候总是有些难的，但迈出这一步就会向良性循环的方向发展。而每天工作得很苦闷，剩下的时间用来咀嚼苦闷，只会陷入恶性循环，让生活更加糟糕。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>使用gor在github上建立静态博客</title>
      <link>http://best-apps-now.com/experience/create_blog_in_github.html</link>
      <pubDate>2014-08-14 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;1.-在github上注册新用户&#34; href=&#34;#1.-在github上注册新用户&#34;&gt;&lt;/a&gt;1. 在github上注册新用户&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;进入网站 &lt;a href=&#34;http://github.com/&#34;&gt;http://github.com/&lt;/a&gt; 完成注册。&#xA;  具体过程略。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;假设你注册的用户名是: &lt;em&gt;abc1235678&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;2.-使用新注册的用户名登陆github&#34; href=&#34;#2.-使用新注册的用户名登陆github&#34;&gt;&lt;/a&gt;2. 使用新注册的用户名登陆github&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;具体过程略。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;3.-在github上建立一个仓库&#34; href=&#34;#3.-在github上建立一个仓库&#34;&gt;&lt;/a&gt;3. 在github上建立一个仓库&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;名称为 &lt;strong&gt;username&lt;/strong&gt;.github.io&lt;/p&gt;&#xA;&#xA;&lt;p&gt;其中的username使用你所注册的用户名abc123来替代。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;建立新仓库，其名称是： &lt;strong&gt;abc1235678&lt;/strong&gt;.github.io&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/new&#34; title=&#34;建立新的仓库&#34;&gt;https://github.com/new&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 仓库名称的第一部分一定要与你的用户名称相同，否则静态博客在github上是不会工作的。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;4.-安装git命令行工具&#34; href=&#34;#4.-安装git命令行工具&#34;&gt;&lt;/a&gt;4. 安装git命令行工具&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;无论是在windows或者linux下，可安装git客户端工具。&#xA;  具体过程略，可百度查询安装方法。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;5.-克隆仓库&#34; href=&#34;#5.-克隆仓库&#34;&gt;&lt;/a&gt;5. 克隆仓库&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;进入到你想保存项目的目录中，然后执行以下命令：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  `$ git clone https://github.com/abc1235678/abc1235678.github.io`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;6.-建立一个首页文件&#34; href=&#34;#6.-建立一个首页文件&#34;&gt;&lt;/a&gt;6. 建立一个首页文件&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;6.1 进入克隆得到的目录&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  `$ cd abc1235678.github.io`&#xA;  `$ echo &amp;quot;Hello World&amp;quot; &amp;gt; index.html`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;6.2 向仓库提交文件&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  `$ git add --all `&#xA;  `$ git commit -m &amp;quot;first file.&amp;quot;`&#xA;  `$ git push`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&#xA;    如果提示输入用户名、密码，输入即可。另外提交之后github上要等待10分钟左右，你所做的改变才会生效。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;7.-查看你的博客内容&#34; href=&#34;#7.-查看你的博客内容&#34;&gt;&lt;/a&gt;7. 查看你的博客内容&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;打入以下网址：&#xA;  &lt;a href=&#34;http://abc1235678.github.io&#34; title=&#34;访问你的博客&#34;&gt;http://abc1235678.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;8.-使用gor打造静态博客&#34; href=&#34;#8.-使用gor打造静态博客&#34;&gt;&lt;/a&gt;8. 使用gor打造静态博客&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;gor的网址是：  &lt;a href=&#34;https://github.com/wendal/gor&#34; title=&#34;gor网址&#34;&gt;https://github.com/wendal/gor&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;里面有详细的安装说明及使用说明。 此处略。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>文件批量改名工具推荐</title>
      <link>http://best-apps-now.com/soft_introduce/batch_rename_files.html</link>
      <pubDate>2014-08-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;平时下载电影、电视剧的文件名都带有下载网站的网址，文件名都很长，为了放到手机或pad中方便查看，需要批量更改文件名中的关键字。因此使用批量文件改名工具比较方便。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;此工具属于免费软件，使用lazarus开发。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先下载批量改名工具： &lt;a href=&#34;http://files.cnblogs.com/free_soft/ChangeFileName.zip&#34; title=&#34;ChangeFileName.zip&#34;&gt;http://files.cnblogs.com/free_soft/ChangeFileName.zip&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;1、解压changefilename.zip，到某目录中。&#34; href=&#34;#1、解压changefilename.zip，到某目录中。&#34;&gt;&lt;/a&gt;1、解压ChangeFileName.zip，到某目录中。&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;2、鼠标双击-changefilename.exe-,出现如下画面：&#34; href=&#34;#2、鼠标双击-changefilename.exe-,出现如下画面：&#34;&gt;&lt;/a&gt;2、鼠标双击 ChangeFileName.exe ,出现如下画面：&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/01.png&#34; alt=&#34;01.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;3、鼠标点击---选择目录--按钮。---去选择你所下载电影，电视剧的目录。&#34; href=&#34;#3、鼠标点击---选择目录--按钮。---去选择你所下载电影，电视剧的目录。&#34;&gt;&lt;/a&gt;3、鼠标点击   选择目录  按钮。   去选择你所下载电影，电视剧的目录。&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/02.png&#34; alt=&#34;02.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;例如电脑里下载的老兵目录。&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/03.png&#34; alt=&#34;03.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;4、鼠标点击第一个文件名，然后，鼠标选择并复制想要更改的文字，例如红框中的&#34; href=&#34;#4、鼠标点击第一个文件名，然后，鼠标选择并复制想要更改的文字，例如红框中的&#34;&gt;&lt;/a&gt;4、鼠标点击第一个文件名，然后，鼠标选择并复制想要更改的文字，例如红框中的&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;[迅播影院www.XunBo.Cc],粘贴到 查找框中 ，如下图所示：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/04.png&#34; alt=&#34;04.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/05.png&#34; alt=&#34;05.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/06.png&#34; alt=&#34;06.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;5、然后点击-更改-按钮。-文件命名后的效果如下图所示：&#34; href=&#34;#5、然后点击-更改-按钮。-文件命名后的效果如下图所示：&#34;&gt;&lt;/a&gt;5、然后点击 更改 按钮。 文件命名后的效果如下图所示：&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/batch_rename/07.png&#34; alt=&#34;07.png&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;##软件下载##&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://files.cnblogs.com/free_soft/ChangeFileName.zip&#34; title=&#34;ChangeFileName.zip&#34;&gt;http://files.cnblogs.com/free_soft/ChangeFileName.zip&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>绿色免费通讯录</title>
      <link>http://best-apps-now.com/soft_introduce/add_book.html</link>
      <pubDate>2014-08-03 12:00:00 +0800</pubDate>
      <description>&lt;h3&gt;简介&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;免费、绿色、好用的通讯录推荐&lt;/p&gt;&#xA;&#xA;&lt;p&gt;支持拼音简码检索、支持部门分组。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;绿色：无需安装，解压后即可使用。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;部分截图如下&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/add/01.png&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/add/02.png&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/add/03.png&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/add/04.png&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/add/05.png&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/add/06.png&#34; alt=&#34;&#34; width=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;下载地址&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/assets/media/download/address_book.rar&#34; title=&#34;address_book.rar&#34;&gt;下载 address_book.rar&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>免费网络抓包工具SmartSniff</title>
      <link>http://best-apps-now.com/soft_introduce/smart_sniff.html</link>
      <pubDate>2014-08-02 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;主要功能&#34; href=&#34;#主要功能&#34;&gt;&lt;/a&gt;主要功能&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;SmartSniff 可以通过网卡捕获网络中的TCP/IP数据包, 并可查看在客户端与服务器之间传输的数据. 可以字符模式查看基于文本协议的数据包内容例如： HTTP, SMTP, POP3 and FTP.) 或者查看非文本协议的数据包内容则以16进制查看内容，例如 DNS。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;截图如下&#34; href=&#34;#截图如下&#34;&gt;&lt;/a&gt;截图如下&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/smart_sniff.jpg&#34; alt=&#34;smart_sniff.jpg&#34; title=&#34;网络抓包工具截图&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;软件工具下载&#34; href=&#34;#软件工具下载&#34;&gt;&lt;/a&gt;软件工具下载&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/assets/media/download/smart_sniff.zip&#34; title=&#34;SmartSniff.zip&#34;&gt;下载 SmartSniff.zip&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>查看当前打开网络端口的免费工具CurrPorts</title>
      <link>http://best-apps-now.com/soft_introduce/curr_ports.html</link>
      <pubDate>2014-08-02 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;主要功能&#34; href=&#34;#主要功能&#34;&gt;&lt;/a&gt;主要功能&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;CurrPorts是一个网络监控软件，它可以显示本地计算机当前所打开的所有TCP/IP及UDP的端口。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对于在端口列表中的每一个进程都可显示其详细信息。包括进程名称、进程的全目录名称，进程的版本（产品名称，文件描述等等），还有进程创建的时间，哪个用户启动了进程等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;另外，CurrPorts还可以关闭你所不想被打开的TCP连接，并且可以杀掉打开端口的进程。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;并可以将打开端口的进程列表保存到Html网页文件,xml文件，或者是tab分割的文本文件中。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;CurrPort也可以使用粉红的颜色标记被进程打开的可疑端口。（某些进程可能没有版本信息和图标）&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;对系统的要求&#34; href=&#34;#对系统的要求&#34;&gt;&lt;/a&gt;对系统的要求&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;此工具可运行在Windows NT, Windows 2000, Windows XP, Windows Server 2003, Windows Server 2008, Windows Vista, and Windows 7，Windows 8 等系统中。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;截图如下&#34; href=&#34;#截图如下&#34;&gt;&lt;/a&gt;截图如下&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/curr_ports.jpg&#34; alt=&#34;CurrPort&#34; title=&#34;截图&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;软件工具下载&#34; href=&#34;#软件工具下载&#34;&gt;&lt;/a&gt;软件工具下载&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/assets/media/download/curr_ports.zip&#34; title=&#34;CurrPorts.zip&#34;&gt;下载 CurrPorts.zip&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>无线网络WIFI查看器</title>
      <link>http://best-apps-now.com/soft_introduce/wnetwatcher.html</link>
      <pubDate>2014-08-01 12:00:00 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;主要功能&#34; href=&#34;#主要功能&#34;&gt;&lt;/a&gt;主要功能&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;无线网络查看器是一个扫描你的无线网络并且显示当前连接到无线网络的所有电脑及设备的小工具。【例如使用此工具可查看你家里的或办公室的无线网络都有谁连接了。】&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对于每个连接到你的无线网络的电脑或设备，会显示如下信息：IP地址、MAC地址、网卡的制造厂家以及电脑名称等。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你还可以将扫描到的电脑或设备列表导出到html/xml/csv/text文件中。或者复制到剪贴板中，或者复制到电子表格中。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;对系统的需求及限制&#34; href=&#34;#对系统的需求及限制&#34;&gt;&lt;/a&gt;对系统的需求及限制&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;此工具可在Windows 2000, Windows XP, Windows Server &lt;sup&gt;2003&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2008&lt;/sub&gt;, Windows Vista, Windows 7, and Windows 8上工作。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;此工具只可以扫描你已经连接上的无线网络. 而不能扫描其他未连接的无线网络。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;个别时候会出现无法探测到正确的适配器，使用F9打开更多高级设置，选择网络适配器。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;截图如下&#34; href=&#34;#截图如下&#34;&gt;&lt;/a&gt;截图如下&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/view_wifi.jpg&#34; alt=&#34;wifi&#34; width=&#34;600&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/images/view_wifi.jpg&#34; alt=&#34;view_wifi.jpg&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;软件工具下载&#34; href=&#34;#软件工具下载&#34;&gt;&lt;/a&gt;软件工具下载&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/assets/media/download/WNetWatcher.zip&#34; title=&#34;WNetWatcher.zip&#34;&gt;下载 WNetWatcher.zip&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>